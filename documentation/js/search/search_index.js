var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.8","fields":["title","body"],"fieldVectors":[["title/interfaces/Address.html",[0,0.921,1,1.423]],["body/interfaces/Address.html",[0,1.016,1,2.073,2,1.696,3,0.287,4,0.249,5,0.249,6,1.696,7,2.701,8,0.366,9,1.787,10,3.799,11,3.799,12,3.799,13,3.799,14,3.799,15,1.381,16,0.851,17,0.027,18,0.424,19,1.696,20,2.416,21,2.416,22,1.696,23,1.354,24,1.457,25,0.015,26,0.02,27,0.015]],["title/classes/AllExceptionsFilter.html",[28,0.295,29,2.448]],["body/classes/AllExceptionsFilter.html",[3,0.222,4,0.192,5,0.192,8,0.283,16,0.384,17,0.028,18,0.222,25,0.012,26,0.017,27,0.012,28,0.252,29,2.986,30,1.545,31,3.407,32,2.381,33,3.407,34,4.726,35,1.392,36,4.343,37,4.047,38,4.726,39,5.158,40,0.73,41,2.828,42,1.126,43,0.584,44,1.126,45,4.047,46,0.973,47,2.828,48,0.55,49,2.828,50,2.828,51,2.087,52,0.584,53,2.381,54,2.826,55,2.828,56,2.828,57,2.42,58,2.828,59,6.087,60,4.047,61,4.726,62,2.828,63,3.407,64,2.828,65,2.828,66,5.678,67,4.047,68,4.047,69,4.047,70,4.047,71,4.047,72,4.047,73,2.828,74,2.828,75,2.828,76,1.691,77,2.828,78,2.828,79,2.828,80,2.828]],["title/controllers/AppController.html",[81,1.227,82,2.19]],["body/controllers/AppController.html",[3,0.324,4,0.281,5,0.281,8,0.414,15,1.079,17,0.028,18,0.324,25,0.017,26,0.021,27,0.017,28,0.368,35,1.798,40,1.067,46,1.422,48,0.71,52,0.853,81,1.933,82,3.451,83,1.528,84,3.48,85,5.073,86,1.915,87,4.133,88,3.132,89,3.48,90,2.075,91,2.728,92,1.528,93,4.133]],["title/modules/AppModule.html",[94,1.062,95,2.19]],["body/modules/AppModule.html",[3,0.224,4,0.194,5,0.194,17,0.028,18,0.224,25,0.012,26,0.017,27,0.012,28,0.254,48,0.85,52,0.589,82,3.136,83,1.507,88,3.112,89,2.404,94,1.521,95,4.294,96,1.225,97,1.323,98,1.56,99,1.56,100,1.323,101,2.596,102,1.56,103,2.404,104,2.404,105,2.404,106,3.406,107,3.406,108,3.406,109,3.406,110,3.112,111,2.226,112,1.56,113,1.56,114,2.856,115,2.437,116,2.856,117,2.856,118,2.856,119,2.856,120,1.885,121,1.323,122,2.107,123,1.885,124,2.856,125,2.856,126,1.323,127,2.856,128,2.107,129,2.856]],["title/injectables/AppService.html",[88,1.813,130,1.062]],["body/injectables/AppService.html",[3,0.341,4,0.296,5,0.296,8,0.436,15,1.115,17,0.027,18,0.341,25,0.018,26,0.022,27,0.018,28,0.388,35,1.858,40,1.124,46,1.498,48,0.591,52,0.899,85,5.169,88,2.951,92,1.61,130,1.729,131,2.186,132,3.666,133,4.354,134,4.354,135,4.354,136,4.354]],["title/controllers/AuthController.html",[81,1.227,137,2.19]],["body/controllers/AuthController.html",[3,0.271,4,0.236,5,0.236,8,0.346,16,0.47,17,0.028,18,0.271,25,0.022,26,0.019,27,0.014,28,0.308,35,1.602,40,0.894,42,1.378,43,0.715,44,1.378,46,1.191,48,0.798,52,0.715,57,2.07,81,1.28,83,1.28,86,1.604,90,1.738,92,1.28,137,3.074,138,2.915,139,2.285,140,4.431,141,2.875,142,2.915,143,3.617,144,3.474,145,3.462,146,2.158,147,2.285,148,2.642,149,2.915,150,4.657,151,1.378,152,1.997,153,2.07,154,2.285,155,1.604,156,3.462,157,3.462,158,3.462,159,1.892,160,3.462]],["title/modules/AuthModule.html",[94,1.062,106,1.984]],["body/modules/AuthModule.html",[3,0.243,4,0.211,5,0.211,17,0.028,18,0.243,25,0.013,26,0.018,27,0.013,28,0.276,48,0.831,52,0.64,76,1.855,83,1.598,94,1.591,96,1.331,97,1.438,98,1.695,99,1.695,100,1.438,101,2.715,102,1.695,106,3.766,110,3.197,111,2.36,112,1.695,113,1.695,115,2.584,122,2.289,123,2.048,128,2.289,137,3.281,148,2.937,149,2.612,161,2.612,162,3.103,163,2.612,164,3.499,165,3.103,166,3.103,167,2.048,168,1.331,169,3.103,170,2.289,171,3.103,172,3.103,173,2.612,174,2.048,175,2.048,176,1.558,177,1.855,178,3.103,179,3.103,180,2.612,181,3.103,182,2.289,183,2.612]],["title/injectables/AuthService.html",[130,1.062,148,1.666]],["body/injectables/AuthService.html",[3,0.189,4,0.164,5,0.164,8,0.242,16,0.65,17,0.028,18,0.189,25,0.018,26,0.015,27,0.01,28,0.215,35,1.241,40,1.235,42,1.905,43,0.988,44,1.905,46,1.485,48,0.777,52,0.499,57,1.445,90,1.213,92,1.596,126,2.489,130,1.155,131,1.213,140,3.037,141,2.935,142,3.037,143,3.063,146,2.218,148,1.811,151,2.327,152,1.851,153,2.581,159,2.358,170,1.783,176,1.811,182,1.783,183,2.035,184,2.035,185,3.607,186,3.607,187,1.445,188,2.417,189,5.566,190,2.417,191,3.607,192,2.417,193,2.417,194,3.607,195,2.862,196,2.417,197,2.035,198,3.037,199,3.634,200,2.381,201,2.417,202,2.662,203,1.783,204,2.035,205,1.595,206,2.417,207,3.185,208,2.167,209,3.607,210,2.417,211,2.417,212,2.417,213,2.417,214,1.213,215,2.417,216,1.445,217,2.417,218,2.417,219,2.035,220,2.417]],["title/modules/CommonModule.html",[94,1.062,107,1.984]],["body/modules/CommonModule.html",[3,0.378,4,0.328,5,0.328,17,0.027,18,0.378,25,0.02,26,0.024,27,0.02,28,0.429,48,0.655,52,0.995,94,1.84,96,2.068,107,3.437,221,4.822]],["title/interfaces/Insurance.html",[0,0.921,222,1.984]],["body/interfaces/Insurance.html",[0,1.316,1,2.288,2,1.649,3,0.279,4,0.242,5,0.242,6,1.649,8,0.356,9,1.754,15,1.346,16,0.773,17,0.027,18,0.372,19,2.472,22,2.472,23,1.316,25,0.015,26,0.019,27,0.015,43,0.735,48,0.483,222,3.191,223,2.349,224,4.791,225,4.791,226,4.665,227,2.128,228,1.944,229,1.944,230,1.944,231,1.944,232,1.944,233,2.349,234,2.626,235,2.626,236,2.626,237,2.626]],["title/interfaces/JwtPayLoad.html",[0,0.921,195,1.984]],["body/interfaces/JwtPayLoad.html",[0,1.283,2,2.142,3,0.362,4,0.314,5,0.314,8,0.463,9,2.072,15,1.245,16,0.628,17,0.026,18,0.362,25,0.019,26,0.023,27,0.019,195,3.351,203,3.411,214,3.147,238,2.321]],["title/injectables/JwtStrategy.html",[130,1.062,164,1.984]],["body/injectables/JwtStrategy.html",[3,0.249,4,0.216,5,0.216,8,0.318,16,0.597,17,0.028,18,0.249,25,0.013,26,0.018,27,0.013,28,0.283,33,2.677,35,1.512,40,1.134,42,1.749,43,0.907,44,1.749,46,1.094,48,0.774,52,0.656,54,1.902,90,1.596,92,1.176,130,1.407,131,1.596,141,2.751,148,2.96,151,2.004,152,1.364,159,1.737,164,3.011,168,1.364,173,2.677,176,1.596,180,2.677,187,1.902,195,3.248,197,2.677,199,3.7,207,2.346,208,1.596,239,4.24,240,2.677,241,5.036,242,3.18,243,3.18,244,4.394,245,3.18,246,2.099,247,3.18,248,3.18,249,2.677,250,3.18,251,3.18,252,3.18,253,3.18,254,3.18,255,3.18,256,3.18,257,3.18,258,3.18,259,3.18,260,3.18]],["title/interfaces/LoginResponse.html",[0,0.921,153,1.984]],["body/interfaces/LoginResponse.html",[0,1.22,2,2.037,3,0.344,4,0.299,5,0.299,8,0.44,9,2.009,15,1.331,16,0.738,17,0.026,18,0.344,25,0.018,26,0.022,27,0.018,57,2.629,153,3.249,182,4.545,200,2.902,219,5.186,238,2.207]],["title/classes/LoginUserDto.html",[28,0.295,143,1.984]],["body/classes/LoginUserDto.html",[3,0.328,4,0.285,5,0.285,8,0.419,9,1.95,15,1.25,16,0.716,17,0.026,18,0.328,25,0.017,26,0.022,27,0.017,28,0.373,30,2.29,40,1.361,91,4.205,143,3.154,151,2.296,200,3.809,214,2.897,238,2.104,261,3.451,262,4.191,263,4.191]],["title/interfaces/Patient.html",[0,0.921,23,1.227]],["body/interfaces/Patient.html",[0,1.165,1,2.599,2,1.38,3,0.233,4,0.203,5,0.203,6,1.38,8,0.298,9,1.553,15,1.357,16,0.857,17,0.027,18,0.329,19,2.808,22,2.808,23,1.553,25,0.012,26,0.017,27,0.012,43,1.09,48,0.405,222,3.157,223,1.966,224,2.508,225,2.508,226,3.588,227,1.781,228,2.885,229,2.885,230,2.885,231,2.657,232,2.885,233,3.485,234,3.896,235,2.198,236,2.198,237,2.198]],["title/controllers/PatientController.html",[81,1.227,264,2.19]],["body/controllers/PatientController.html",[3,0.191,4,0.166,5,0.166,8,0.244,15,1.21,16,0.653,17,0.028,18,0.191,23,0.901,25,0.01,26,0.015,27,0.01,28,0.217,35,1.248,40,1.326,42,1.912,43,0.992,44,1.912,46,1.768,48,0.732,52,0.503,81,0.901,83,0.901,86,2.381,90,1.223,92,1.9,139,1.608,144,2.863,146,2.764,147,2.396,152,1.045,154,1.608,155,1.129,168,1.045,216,3.222,264,2.396,265,2.051,266,2.436,267,3.056,268,3.056,269,4.046,270,2.678,271,2.678,272,2.051,273,3.705,274,2.436,275,2.051,276,3.056,277,2.436,278,2.436,279,1.798,280,3.056,281,2.436,282,1.798,283,3.056,284,2.436,285,1.798,286,2.051,287,2.051,288,2.051,289,1.798,290,2.369,291,2.051,292,2.436,293,2.436,294,1.798,295,2.436,296,2.436,297,1.798,298,2.436,299,2.051,300,2.436,301,2.436,302,2.436,303,2.436,304,2.436,305,2.051,306,2.436]],["title/classes/PatientDto.html",[28,0.295,273,1.984]],["body/classes/PatientDto.html",[1,2.254,3,0.179,4,0.155,5,0.155,6,1.057,8,0.228,9,1.542,10,1.506,11,1.506,12,1.506,13,1.506,14,1.506,15,1.305,16,0.853,17,0.028,18,0.179,19,2.435,20,1.506,21,1.506,22,2.435,23,0.844,24,0.908,25,0.009,26,0.014,27,0.009,28,0.203,30,1.246,40,1.539,43,0.861,48,0.566,86,2.719,155,1.057,222,2.493,227,1.364,228,2.278,229,2.278,230,2.278,231,1.887,232,2.278,233,2.752,238,1.145,273,2.066,307,4.46,308,2.493,309,4.169,310,2.281,311,1.921,312,3.51,313,2.281,314,4.695,315,2.281,316,2.281,317,2.908,318,2.281,319,2.281,320,2.281,321,2.281,322,2.281,323,2.281,324,2.281,325,1.921,326,2.908]],["title/modules/PatientModule.html",[94,1.062,108,1.984]],["body/modules/PatientModule.html",[3,0.273,4,0.237,5,0.237,17,0.028,18,0.273,23,1.29,25,0.014,26,0.019,27,0.014,28,0.311,43,0.72,48,0.823,52,0.72,76,2.087,83,1.731,94,1.692,96,1.497,97,1.617,98,1.906,99,1.906,100,1.617,101,2.886,102,1.906,108,3.625,111,2.558,112,1.906,113,1.906,115,2.087,120,2.303,121,1.617,167,2.303,168,1.497,174,2.303,175,2.303,176,1.752,177,2.087,264,3.487,290,3.312,291,2.938,327,2.938,328,2.938,329,3.489,330,3.489,331,3.454,332,3.489,333,2.575,334,2.575]],["title/injectables/PatientService.html",[130,1.062,290,1.813]],["body/injectables/PatientService.html",[3,0.187,4,0.163,5,0.163,8,0.239,15,1.204,16,0.692,17,0.028,18,0.187,23,1.323,25,0.01,26,0.015,27,0.01,28,0.213,35,1.231,40,1.381,42,2.029,43,1.052,44,2.029,46,1.754,48,0.692,51,1.764,52,0.494,54,1.43,91,1.578,92,1.885,121,1.108,130,1.146,131,1.2,141,3.433,146,2.751,152,1.025,159,2.785,187,1.43,198,2.013,205,1.578,208,1.2,216,2.847,246,1.578,267,3.013,268,3.013,269,4.009,270,2.64,272,3.013,273,3.652,275,3.013,279,2.64,290,1.955,307,1.764,308,1.43,325,2.013,335,2.013,336,3.578,337,2.391,338,3.513,339,2.391,340,3.578,341,2.391,342,2.391,343,2.391,344,2.391,345,3.578,346,2.391,347,2.013,348,1.764,349,1.578,350,2.391,351,2.391,352,2.391,353,2.391,354,2.391,355,2.391,356,2.391]],["title/interfaces/Professional.html",[0,0.921,24,1.32]],["body/interfaces/Professional.html",[0,0.855,1,2.621,2,1.428,3,0.241,4,0.21,5,0.21,6,1.428,8,0.308,9,1.59,15,1.35,16,0.863,17,0.027,18,0.337,19,2.832,22,2.832,24,1.711,25,0.013,26,0.018,27,0.013,43,1.106,48,0.418,227,1.843,228,2.928,229,2.928,230,2.928,231,2.705,232,2.928,357,2.274,358,3.954,359,3.954,360,3.954,361,2.594,362,2.594,363,2.594]],["title/controllers/ProfessionalController.html",[81,1.227,364,2.19]],["body/controllers/ProfessionalController.html",[3,0.188,4,0.163,5,0.163,8,0.24,15,1.205,16,0.647,17,0.028,18,0.188,24,0.954,25,0.01,26,0.015,27,0.01,28,0.213,35,1.233,40,1.317,42,2.031,43,1.054,44,2.031,46,1.756,48,0.727,52,0.495,81,0.886,83,0.886,86,2.365,90,1.204,92,1.887,139,1.582,144,2.835,146,2.753,147,2.367,152,1.028,154,1.582,155,1.111,168,1.028,216,3.203,270,2.646,271,2.646,276,3.019,279,1.769,280,3.019,282,1.769,283,3.019,285,1.769,286,2.018,287,2.018,288,2.018,289,1.769,294,1.769,297,1.769,299,2.018,305,2.018,364,2.367,365,2.018,366,2.018,367,3.019,368,3.019,369,3.019,370,2.018,371,3.694,372,2.397,373,2.018,374,2.397,375,2.397,376,2.397,377,3.586,378,2.397,379,2.397,380,2.397,381,2.347,382,2.018,383,2.397,384,2.397,385,2.397,386,2.397,387,2.397,388,2.397,389,2.397,390,2.397,391,2.397,392,2.397,393,2.397]],["title/classes/ProfessionalDto.html",[28,0.295,371,1.984]],["body/classes/ProfessionalDto.html",[1,2.246,3,0.177,4,0.154,5,0.154,6,1.046,8,0.226,9,1.532,10,1.491,11,1.491,12,1.491,13,1.491,14,1.491,15,1.303,16,0.851,17,0.028,18,0.177,19,2.426,20,1.491,21,1.491,22,2.426,23,0.835,24,0.899,25,0.009,26,0.014,27,0.009,28,0.201,30,1.234,40,1.535,43,0.855,48,0.563,86,2.756,155,1.046,227,1.35,228,2.264,229,2.264,230,2.264,231,1.873,232,2.264,238,1.134,308,2.478,311,1.901,312,3.488,314,4.738,317,2.886,326,2.886,358,3.057,359,3.057,360,3.057,371,2.05,394,4.45,395,1.901,396,2.258,397,2.258,398,2.258,399,2.258,400,2.258,401,2.258,402,2.258,403,2.258,404,2.258,405,2.258,406,1.901]],["title/modules/ProfessionalModule.html",[94,1.062,109,1.984]],["body/modules/ProfessionalModule.html",[3,0.273,4,0.237,5,0.237,17,0.028,18,0.273,24,1.389,25,0.014,26,0.019,27,0.014,28,0.311,43,0.72,48,0.823,52,0.72,76,2.087,83,1.731,94,1.692,96,1.497,97,1.617,98,1.906,99,1.906,100,1.617,101,2.886,102,1.906,109,3.625,111,2.558,112,1.906,113,1.906,115,2.087,120,2.303,121,1.617,167,2.303,168,1.497,174,2.303,175,2.303,176,1.752,177,2.087,333,2.575,334,2.575,364,3.487,381,3.312,382,2.938,407,2.938,408,2.938,409,3.489,410,3.489,411,3.454,412,3.489]],["title/injectables/ProfessionalService.html",[130,1.062,381,1.813]],["body/injectables/ProfessionalService.html",[3,0.187,4,0.163,5,0.163,8,0.239,15,1.204,16,0.692,17,0.028,18,0.187,24,1.424,25,0.01,26,0.015,27,0.01,28,0.213,35,1.231,40,1.381,42,2.029,43,1.052,44,2.029,46,1.754,48,0.692,52,0.494,54,2.14,91,1.578,92,1.885,121,1.108,130,1.146,131,1.2,141,3.433,146,2.751,152,1.025,159,2.785,187,1.43,205,1.578,208,1.2,216,2.847,271,2.64,282,2.64,308,1.43,338,3.513,348,1.764,349,1.578,366,3.013,367,3.013,368,3.013,369,4.009,370,3.013,371,3.652,373,3.013,381,1.955,394,1.764,406,2.013,413,2.013,414,3.578,415,2.391,416,2.391,417,3.578,418,2.391,419,2.391,420,2.391,421,3.578,422,2.391,423,2.391,424,2.391,425,2.391,426,2.391,427,2.391,428,2.391,429,2.391,430,2.391]],["title/classes/RegisterUserDto.html",[28,0.295,431,1.984]],["body/classes/RegisterUserDto.html",[3,0.322,4,0.28,5,0.28,8,0.412,9,1.927,15,1.242,16,0.708,17,0.027,18,0.322,25,0.017,26,0.021,27,0.017,28,0.366,30,2.248,40,1.345,48,0.559,86,2.415,155,1.906,214,2.872,238,2.065,261,3.421,314,4.579,395,3.464,431,3.117,432,4.222,433,4.114]],["title/interfaces/User.html",[0,0.921,151,1.32]],["body/interfaces/User.html",[0,1.179,2,1.969,3,0.333,4,0.289,5,0.289,8,0.425,9,1.968,15,1.366,16,0.789,17,0.027,18,0.333,25,0.017,26,0.022,27,0.017,151,2.117,214,3.056,261,3.64,308,3.64,434,3.579]],["title/injectables/UserService.html",[126,1.537,130,1.062]],["body/injectables/UserService.html",[3,0.196,4,0.17,5,0.17,8,0.25,15,0.908,16,0.598,17,0.028,18,0.196,25,0.01,26,0.015,27,0.01,28,0.222,35,1.272,36,2.103,40,1.256,42,1.751,43,0.908,44,1.751,46,1.514,48,0.738,52,0.516,54,2.211,63,2.103,92,1.367,121,1.157,126,1.713,130,1.184,131,1.254,141,3.223,146,2.519,151,1.471,152,1.071,159,2.97,177,2.632,187,1.493,202,2.728,204,2.103,205,1.649,207,2.728,208,2.209,214,2.442,246,1.649,261,1.493,338,3.589,348,1.843,349,1.649,431,3.105,432,1.843,435,2.103,436,3.697,437,4.096,438,3.112,439,2.497,440,2.497,441,3.697,442,3.697,443,2.497,444,2.497,445,3.112,446,2.497,447,3.697,448,2.497,449,2.497,450,2.497,451,2.497,452,2.497,453,2.497,454,2.497,455,3.697,456,2.497,457,2.497,458,2.497,459,2.497,460,2.497,461,2.497,462,2.497,463,2.497,464,2.497,465,2.497,466,2.497,467,2.497,468,2.497]],["title/controllers/UsersController.html",[81,1.227,469,2.19]],["body/controllers/UsersController.html",[3,0.253,4,0.219,5,0.219,8,0.323,16,0.438,17,0.028,18,0.253,25,0.013,26,0.018,27,0.013,28,0.287,35,1.527,40,1.145,42,1.284,43,0.666,44,1.284,46,1.527,48,0.804,51,2.38,52,0.666,81,1.193,83,1.193,86,2.056,90,1.619,92,1.641,126,2.351,139,2.129,144,3.349,146,2.532,147,2.929,151,1.284,152,1.383,154,2.129,155,1.494,168,1.383,246,2.129,285,2.38,289,2.38,294,2.38,297,2.38,347,2.716,431,3.541,437,4.601,438,4.272,445,2.716,469,2.929,470,2.716,471,3.226,472,3.226,473,3.226,474,3.226,475,2.716,476,3.226,477,3.226,478,3.226,479,3.226,480,3.226,481,3.226]],["title/modules/UsersModule.html",[94,1.062,110,1.813]],["body/modules/UsersModule.html",[3,0.256,4,0.223,5,0.223,17,0.028,18,0.256,25,0.013,26,0.018,27,0.013,28,0.291,43,0.676,48,0.827,52,0.676,76,1.957,83,1.658,94,1.637,96,1.404,97,1.516,98,1.788,99,1.788,100,1.516,101,2.793,102,2.793,110,3.327,111,2.449,112,1.788,113,1.788,115,1.957,120,2.16,121,1.516,122,2.415,123,2.16,126,3.001,128,2.415,151,1.302,167,2.16,168,1.404,174,2.16,175,2.16,176,1.643,177,1.957,333,2.415,334,2.415,469,3.375,475,2.755,482,2.755,483,2.755,484,2.755,485,3.273,486,3.273,487,3.307,488,3.273]],["title/coverage.html",[489,3.339]],["body/coverage.html",[0,1.571,1,1.092,5,0.173,6,1.18,7,1.879,16,0.346,17,0.027,23,0.942,24,1.014,25,0.01,26,0.015,27,0.01,28,0.466,29,1.879,31,2.145,32,2.145,57,1.523,81,1.936,82,1.681,84,2.145,88,1.392,100,1.18,126,1.18,130,1.753,132,2.145,137,1.681,138,2.145,143,1.523,148,1.279,151,1.493,153,1.523,164,1.523,184,2.145,195,1.523,200,2.476,203,1.879,208,1.279,222,1.523,223,2.476,238,2.749,239,2.145,240,2.145,264,1.681,265,2.145,273,1.523,290,1.392,307,1.879,331,1.879,335,2.145,357,1.879,364,1.681,365,2.145,371,1.523,381,1.392,394,1.879,411,1.879,413,2.145,431,1.523,432,1.879,434,2.145,435,2.145,469,1.681,470,2.145,487,1.879,489,1.879,490,2.547,491,2.547,492,2.547,493,6.668,494,5.235,495,3.751,496,5.235,497,4.452,498,2.145,499,2.547,500,4.911,501,3.751,502,3.751,503,3.751,504,3.751,505,2.145,506,4.452,507,2.145,508,2.145,509,2.547,510,2.547]],["title/dependencies.html",[97,1.849,511,2.773]],["body/dependencies.html",[17,0.028,25,0.016,26,0.021,27,0.016,52,0.823,53,3.356,97,1.847,121,1.847,123,2.631,155,1.847,168,1.71,170,2.941,176,2.001,202,2.941,249,4.301,349,2.631,512,5.637,513,3.986,514,5.108,515,3.986,516,3.986,517,5.108,518,3.986,519,3.986,520,3.986,521,5.108,522,3.986,523,3.986,524,3.986,525,3.986,526,3.986,527,3.986,528,3.986,529,3.986,530,3.986,531,3.986,532,3.986]],["title/miscellaneous/functions.html",[533,1.515,534,3.359]],["body/miscellaneous/functions.html",[8,0.504,17,0.024,25,0.021,26,0.024,27,0.021,100,2.898,498,4.243,533,2.753,534,4.243,535,5.039]],["title/index.html",[8,0.277,536,2.773,537,2.773]],["body/index.html",[4,0.23,17,0.027,25,0.014,26,0.019,27,0.014,489,2.497,538,3.384,539,3.384,540,4.586,541,3.384,542,3.384,543,3.384,544,3.384,545,3.384,546,3.384,547,3.384,548,3.384,549,3.384,550,3.384,551,5.201,552,3.384,553,3.384,554,3.384,555,3.384,556,6.144,557,3.384,558,3.384,559,3.384,560,6.008,561,3.384,562,3.384,563,4.586,564,3.384,565,3.384,566,3.384,567,3.384,568,4.586,569,4.586,570,3.384,571,3.384,572,3.384,573,4.586,574,4.586,575,3.384,576,3.384,577,3.384,578,3.384,579,3.384,580,2.849,581,3.384,582,3.384,583,3.384,584,3.384,585,3.384,586,3.384,587,3.384,588,3.384,589,3.384,590,3.384,591,3.384,592,3.384,593,3.384,594,3.384,595,3.384,596,3.384,597,3.384,598,3.384]],["title/modules.html",[96,1.941]],["body/modules.html",[17,0.023,25,0.018,26,0.023,27,0.018,95,2.96,96,1.923,106,2.682,107,2.682,108,2.682,109,2.682,110,2.45,580,5.359,599,6.365,600,6.365,601,6.478,602,4.484,603,4.484]],["title/overview.html",[604,3.81]],["body/overview.html",[2,1.473,17,0.027,25,0.013,26,0.018,27,0.013,30,1.737,83,1.176,88,2.751,94,1.018,95,4.313,96,1.364,97,1.473,98,1.737,99,1.737,100,1.473,101,1.737,102,1.737,103,2.677,104,2.677,105,2.677,106,3.739,107,3.011,108,3.409,109,3.409,110,3.302,111,2.401,112,1.737,113,1.737,126,2.8,131,1.596,148,2.528,161,2.677,163,2.677,164,3.011,290,2.751,327,2.677,328,2.677,381,2.751,407,2.677,408,2.677,482,2.677,483,2.677,484,2.677,604,2.677,605,4.394,606,4.394,607,3.18]],["title/miscellaneous/typealiases.html",[533,1.515,608,3.99]],["body/miscellaneous/typealiases.html",[6,1.988,7,4.304,8,0.429,16,0.583,17,0.027,19,2.48,20,2.833,21,2.833,22,2.48,23,1.587,24,1.708,25,0.018,26,0.022,27,0.018,223,2.833,226,3.949,235,3.166,236,3.166,237,3.166,357,3.166,360,3.949,361,3.613,362,3.613,363,3.613,533,2.344,609,4.291,610,5.352,611,4.291,612,4.291]],["title/miscellaneous/variables.html",[533,1.515,613,3.359]],["body/miscellaneous/variables.html",[1,1.913,8,0.325,10,2.944,11,2.944,12,2.944,13,2.944,14,2.944,15,1.406,16,0.441,17,0.027,19,2.066,22,2.066,25,0.013,26,0.018,27,0.013,43,0.921,208,2.557,214,1.631,228,2.437,229,2.437,230,2.437,231,2.437,232,2.437,233,2.145,234,2.397,261,1.943,331,3.291,358,2.397,359,2.397,411,3.291,487,3.291,505,2.735,507,2.735,508,2.735,533,1.775,613,2.735,614,3.249,615,3.249,616,3.249,617,5.093,618,5.093,619,5.093,620,3.249,621,3.249,622,4.46,623,3.249]]],"invertedIndex":[["",{"_index":17,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":493,"title":{},"body":{"coverage.html":{}}}],["0.1.13",{"_index":525,"title":{},"body":{"dependencies.html":{}}}],["0.4.1",{"_index":522,"title":{},"body":{"dependencies.html":{}}}],["0.5.0",{"_index":513,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":500,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":504,"title":{},"body":{"coverage.html":{}}}],["0/12",{"_index":502,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":494,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":496,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":503,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":495,"title":{},"body":{"coverage.html":{}}}],["0/6",{"_index":497,"title":{},"body":{"coverage.html":{}}}],["0/7",{"_index":501,"title":{},"body":{"coverage.html":{}}}],["10",{"_index":457,"title":{},"body":{"injectables/UserService.html":{}}}],["11000",{"_index":463,"title":{},"body":{"injectables/UserService.html":{}}}],["3.0.2",{"_index":527,"title":{},"body":{"dependencies.html":{}}}],["3600s",{"_index":183,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{}}}],["4.0.0",{"_index":521,"title":{},"body":{"dependencies.html":{}}}],["4.1.4",{"_index":532,"title":{},"body":{"dependencies.html":{}}}],["4.5.12",{"_index":518,"title":{},"body":{"dependencies.html":{}}}],["5",{"_index":606,"title":{},"body":{"overview.html":{}}}],["5.0.0",{"_index":519,"title":{},"body":{"dependencies.html":{}}}],["6",{"_index":605,"title":{},"body":{"overview.html":{}}}],["6.5.4",{"_index":529,"title":{},"body":{"dependencies.html":{}}}],["7",{"_index":607,"title":{},"body":{"overview.html":{}}}],["7.0.0",{"_index":512,"title":{},"body":{"dependencies.html":{}}}],["7.0.2",{"_index":515,"title":{},"body":{"dependencies.html":{}}}],["7.1.0",{"_index":514,"title":{},"body":{"dependencies.html":{}}}],["_id",{"_index":308,"title":{},"body":{"classes/PatientDto.html":{},"injectables/PatientService.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"interfaces/User.html":{}}}],["address",{"_index":1,"title":{"interfaces/Address.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["administrative",{"_index":363,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["aliases",{"_index":609,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allexceptionsfilter",{"_index":29,"title":{"classes/AllExceptionsFilter.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["amazing",{"_index":581,"title":{},"body":{"index.html":{}}}],["angular",{"_index":549,"title":{},"body":{"index.html":{}}}],["apiproperty",{"_index":314,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{}}}],["apiproperty({enum",{"_index":317,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["apiproperty({properties",{"_index":311,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["apitags",{"_index":154,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["apitags('authorizations",{"_index":156,"title":{},"body":{"controllers/AuthController.html":{}}}],["apitags('patients",{"_index":295,"title":{},"body":{"controllers/PatientController.html":{}}}],["apitags('professionals",{"_index":384,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["apitags('registration",{"_index":478,"title":{},"body":{"controllers/UsersController.html":{}}}],["app",{"_index":558,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":116,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":89,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["app/service/auth.service",{"_index":149,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["app/service/patient.service",{"_index":291,"title":{},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{}}}],["app/service/professional.service",{"_index":382,"title":{},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{}}}],["app/service/user.service",{"_index":475,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["app/strategy/jwt",{"_index":172,"title":{},"body":{"modules/AuthModule.html":{}}}],["appcontroller",{"_index":82,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":546,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":95,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":88,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["argumentshost",{"_index":39,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["array",{"_index":620,"title":{},"body":{"miscellaneous/variables.html":{}}}],["async",{"_index":141,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["auth/auth.module",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":137,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authguard",{"_index":294,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["authmodule",{"_index":106,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":591,"title":{},"body":{"index.html":{}}}],["authservice",{"_index":148,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":603,"title":{},"body":{"modules.html":{}}}],["await",{"_index":159,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["backend",{"_index":135,"title":{},"body":{"injectables/AppService.html":{}}}],["backers",{"_index":582,"title":{},"body":{"index.html":{}}}],["badgatewayexception",{"_index":447,"title":{},"body":{"injectables/UserService.html":{}}}],["baseexceptionfilter",{"_index":34,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["bcrypt",{"_index":202,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["bcrypt.compare(loginuserdto.password",{"_index":210,"title":{},"body":{"injectables/AuthService.html":{}}}],["bcrypt.hash(registeruserdto.password",{"_index":456,"title":{},"body":{"injectables/UserService.html":{}}}],["birthdate",{"_index":230,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["body",{"_index":147,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["bootstrap",{"_index":100,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":601,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":599,"title":{},"body":{"modules.html":{}}}],["building",{"_index":541,"title":{},"body":{"index.html":{}}}],["cardnumber",{"_index":224,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{}}}],["catch",{"_index":36,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UserService.html":{}}}],["catch(exception",{"_index":37,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["checkpass",{"_index":209,"title":{},"body":{"injectables/AuthService.html":{}}}],["city",{"_index":10,"title":{},"body":{"interfaces/Address.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["class",{"_index":28,"title":{"classes/AllExceptionsFilter.html":{},"classes/LoginUserDto.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{}},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["classes",{"_index":30,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"classes/LoginUserDto.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":103,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":104,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":105,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":161,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":162,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":163,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_patientmodule",{"_index":327,"title":{},"body":{"modules/PatientModule.html":{},"overview.html":{}}}],["cluster_patientmodule_providers",{"_index":328,"title":{},"body":{"modules/PatientModule.html":{},"overview.html":{}}}],["cluster_professionalmodule",{"_index":407,"title":{},"body":{"modules/ProfessionalModule.html":{},"overview.html":{}}}],["cluster_professionalmodule_providers",{"_index":408,"title":{},"body":{"modules/ProfessionalModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":482,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":483,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":484,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["common/common.module",{"_index":119,"title":{},"body":{"modules/AppModule.html":{}}}],["commonmodule",{"_index":107,"title":{"modules/CommonModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CommonModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["configmodule.forroot",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{}}}],["conflictexception",{"_index":448,"title":{},"body":{"injectables/UserService.html":{}}}],["conflictexception(\"duplicated",{"_index":464,"title":{},"body":{"injectables/UserService.html":{}}}],["const",{"_index":54,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["constructor",{"_index":187,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["constructor(@injectmodel(\"user",{"_index":449,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(@injectmodel('patient",{"_index":350,"title":{},"body":{"injectables/PatientService.html":{}}}],["constructor(@injectmodel('professional",{"_index":424,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["constructor(authservice",{"_index":242,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["constructor(patientmodel",{"_index":337,"title":{},"body":{"injectables/PatientService.html":{}}}],["constructor(private",{"_index":90,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["constructor(professionalmodel",{"_index":415,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["constructor(usermodel",{"_index":439,"title":{},"body":{"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":188,"title":{},"body":{"injectables/AuthService.html":{}}}],["controller",{"_index":81,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('/patients",{"_index":296,"title":{},"body":{"controllers/PatientController.html":{}}}],["controller('/professionals",{"_index":385,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["controller('login",{"_index":157,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('register",{"_index":479,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":83,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":489,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["createjwtpayload",{"_index":185,"title":{},"body":{"injectables/AuthService.html":{}}}],["createjwtpayload(user",{"_index":191,"title":{},"body":{"injectables/AuthService.html":{}}}],["createpatient",{"_index":267,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["createpatient(@body",{"_index":303,"title":{},"body":{"controllers/PatientController.html":{}}}],["createpatient(patientdto",{"_index":272,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["createprofessional",{"_index":367,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["createprofessional(@body",{"_index":391,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["createprofessional(professionaldto",{"_index":370,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["ctx",{"_index":55,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["ctx.getresponse",{"_index":58,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["data",{"_index":213,"title":{},"body":{"injectables/AuthService.html":{}}}],["date",{"_index":231,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["declarations",{"_index":99,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":86,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":617,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defaultstrategy",{"_index":175,"title":{},"body":{"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["defined",{"_index":40,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["delete",{"_index":287,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["delete('/:id",{"_index":276,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["deletepatient",{"_index":268,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["deletepatient(@param('id",{"_index":301,"title":{},"body":{"controllers/PatientController.html":{}}}],["deletepatient(id",{"_index":275,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["deleteprofessional",{"_index":368,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["deleteprofessional(@param('id",{"_index":389,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["deleteprofessional(id",{"_index":373,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["dental",{"_index":237,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["dependencies",{"_index":97,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":550,"title":{},"body":{"index.html":{}}}],["development",{"_index":559,"title":{},"body":{"index.html":{}}}],["doctor",{"_index":361,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["documentation",{"_index":490,"title":{},"body":{"coverage.html":{}}}],["domain/dto/login",{"_index":150,"title":{},"body":{"controllers/AuthController.html":{}}}],["domain/dto/patient",{"_index":293,"title":{},"body":{"controllers/PatientController.html":{}}}],["domain/dto/payload",{"_index":251,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["domain/dto/professional",{"_index":383,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["domain/dto/user",{"_index":476,"title":{},"body":{"controllers/UsersController.html":{}}}],["domain/models/patient.interface",{"_index":292,"title":{},"body":{"controllers/PatientController.html":{}}}],["domain/models/professional.interface",{"_index":380,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["domain/models/user.interface",{"_index":477,"title":{},"body":{"controllers/UsersController.html":{}}}],["doornumber",{"_index":11,"title":{},"body":{"interfaces/Address.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["dto",{"_index":152,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["dto.ts",{"_index":238,"title":{},"body":{"interfaces/JwtPayLoad.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{},"coverage.html":{}}}],["dto.ts:10",{"_index":320,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:11",{"_index":401,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:12",{"_index":316,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:13",{"_index":398,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:14",{"_index":323,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:15",{"_index":404,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:16",{"_index":318,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:17",{"_index":399,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:18",{"_index":315,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:19",{"_index":397,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:2",{"_index":262,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["dto.ts:20",{"_index":322,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:21",{"_index":402,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:3",{"_index":263,"title":{},"body":{"classes/LoginUserDto.html":{}}}],["dto.ts:30",{"_index":313,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:31",{"_index":396,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:32",{"_index":321,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:33",{"_index":400,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:34",{"_index":319,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:35",{"_index":403,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["dto.ts:5",{"_index":433,"title":{},"body":{"classes/RegisterUserDto.html":{}}}],["dto.ts:6",{"_index":310,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:7",{"_index":395,"title":{},"body":{"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{}}}],["dto.ts:8",{"_index":324,"title":{},"body":{"classes/PatientDto.html":{}}}],["dto.ts:9",{"_index":405,"title":{},"body":{"classes/ProfessionalDto.html":{}}}],["e2e",{"_index":570,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":542,"title":{},"body":{"index.html":{}}}],["el",{"_index":258,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["email",{"_index":214,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayLoad.html":{},"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["enum",{"_index":326,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["error",{"_index":63,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/UserService.html":{}}}],["error.code",{"_index":462,"title":{},"body":{"injectables/UserService.html":{}}}],["exception",{"_index":45,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message",{"_index":64,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.message.error",{"_index":65,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["exception.status",{"_index":66,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["expiresin",{"_index":182,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"interfaces/LoginResponse.html":{}}}],["export",{"_index":18,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["exports",{"_index":102,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":517,"title":{},"body":{"dependencies.html":{}}}],["extends",{"_index":33,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/JwtStrategy.html":{}}}],["extractjwt",{"_index":248,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":255,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":76,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["family",{"_index":236,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["female",{"_index":21,"title":{},"body":{"interfaces/Address.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{}}}],["file",{"_index":5,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["filter.ts",{"_index":32,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["filter.ts:7",{"_index":41,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["finally",{"_index":465,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail",{"_index":436,"title":{},"body":{"injectables/UserService.html":{}}}],["findbyemail(email",{"_index":442,"title":{},"body":{"injectables/UserService.html":{}}}],["firstsurname",{"_index":228,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["framework",{"_index":540,"title":{},"body":{"index.html":{}}}],["function",{"_index":499,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":534,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["gender",{"_index":19,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["get('/:id",{"_index":280,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["get()@useguards(undefined",{"_index":472,"title":{},"body":{"controllers/UsersController.html":{}}}],["getallpatients",{"_index":269,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{}}}],["getallprofessionals",{"_index":369,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["getallprofessionals(@req",{"_index":386,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["getallprofessionals(request",{"_index":375,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["getallusers",{"_index":437,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["gethello",{"_index":85,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getpatient",{"_index":270,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{}}}],["getpatient(@param('id",{"_index":299,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["getpatient(id",{"_index":279,"title":{},"body":{"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{}}}],["getprofessional",{"_index":414,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["getprofessional(id",{"_index":421,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["getting",{"_index":536,"title":{"index.html":{}},"body":{}}],["graph",{"_index":602,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":577,"title":{},"body":{"index.html":{}}}],["health",{"_index":235,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["heavily",{"_index":547,"title":{},"body":{"index.html":{}}}],["here",{"_index":588,"title":{},"body":{"index.html":{}}}],["host",{"_index":38,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["host.switchtohttp",{"_index":56,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpexception",{"_index":347,"title":{},"body":{"injectables/PatientService.html":{},"controllers/UsersController.html":{}}}],["https://nestjs.com",{"_index":595,"title":{},"body":{"index.html":{}}}],["httpserver",{"_index":50,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus",{"_index":51,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"injectables/PatientService.html":{},"controllers/UsersController.html":{}}}],["httpstatus.bad_request",{"_index":71,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.expectation_failed",{"_index":70,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.internal_server_error",{"_index":60,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.not_acceptable",{"_index":69,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.not_found",{"_index":67,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.service_unavailable",{"_index":68,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["httpstatus.unauthorized",{"_index":72,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["id",{"_index":216,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["identifier",{"_index":491,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":48,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"injectables/JwtStrategy.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["imports",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":8,"title":{"index.html":{}},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["infrastructure/mongodb/patient.schema",{"_index":332,"title":{},"body":{"modules/PatientModule.html":{}}}],["infrastructure/mongodb/professional.schema",{"_index":412,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["infrastructure/mongodb/user.schema",{"_index":488,"title":{},"body":{"modules/UsersModule.html":{}}}],["inject",{"_index":49,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["injectable",{"_index":130,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["injectables",{"_index":131,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"overview.html":{}}}],["injectmodel",{"_index":348,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["inspired",{"_index":548,"title":{},"body":{"index.html":{}}}],["installation",{"_index":555,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":557,"title":{},"body":{"index.html":{}}}],["instanceof",{"_index":62,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["insurance",{"_index":222,"title":{"interfaces/Insurance.html":{}},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"coverage.html":{}}}],["insurancecompanies",{"_index":309,"title":{},"body":{"classes/PatientDto.html":{}}}],["insurancecompanyname",{"_index":225,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{}}}],["insurances",{"_index":234,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"miscellaneous/variables.html":{}}}],["insurancetype",{"_index":226,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"miscellaneous/typealiases.html":{}}}],["interface",{"_index":0,"title":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"interfaces/LoginResponse.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"interfaces/User.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"interfaces/LoginResponse.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"interfaces/User.html":{},"coverage.html":{}}}],["interfaces",{"_index":2,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"interfaces/LoginResponse.html":{},"interfaces/Patient.html":{},"interfaces/Professional.html":{},"interfaces/User.html":{},"overview.html":{}}}],["join",{"_index":584,"title":{},"body":{"index.html":{}}}],["json",{"_index":74,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["jwt",{"_index":176,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["jwtfromrequest",{"_index":254,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":169,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":178,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtpayload",{"_index":195,"title":{"interfaces/JwtPayLoad.html":{}},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["jwtservice",{"_index":189,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":164,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":592,"title":{},"body":{"index.html":{}}}],["legend",{"_index":98,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["license",{"_index":598,"title":{},"body":{"index.html":{}}}],["licensed",{"_index":574,"title":{},"body":{"index.html":{}}}],["logger",{"_index":246,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["logger.log(\"creando",{"_index":257,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["logger.log(\"entrando",{"_index":259,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["login",{"_index":140,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["login(@body",{"_index":158,"title":{},"body":{"controllers/AuthController.html":{}}}],["login(loginuserdto",{"_index":142,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{}}}],["loginresponse",{"_index":153,"title":{"interfaces/LoginResponse.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/LoginResponse.html":{},"coverage.html":{}}}],["loginuserdto",{"_index":143,"title":{"classes/LoginUserDto.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["looks",{"_index":77,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["male",{"_index":20,"title":{},"body":{"interfaces/Address.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{}}}],["matching",{"_index":26,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["medicalboardnumber",{"_index":358,"title":{},"body":{"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["message",{"_index":61,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["metadata",{"_index":524,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":35,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["migrate",{"_index":520,"title":{},"body":{"dependencies.html":{}}}],["miscellaneous",{"_index":533,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":573,"title":{},"body":{"index.html":{}}}],["mode",{"_index":563,"title":{},"body":{"index.html":{}}}],["model",{"_index":338,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["module",{"_index":94,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":96,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/CommonModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["mongoose",{"_index":349,"title":{},"body":{"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"dependencies.html":{}}}],["mongoose.schema",{"_index":619,"title":{},"body":{"miscellaneous/variables.html":{}}}],["mongoosemodule",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forfeature",{"_index":333,"title":{},"body":{"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["mongoosemodule.forroot(`mongodb+srv://${process.env.user}:${process.env.pass}@${process.env.host}?retrywrites=true&w=majority",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["more",{"_index":587,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":593,"title":{},"body":{"index.html":{}}}],["name",{"_index":43,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Insurance.html":{},"injectables/JwtStrategy.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"miscellaneous/variables.html":{}}}],["nest",{"_index":551,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":597,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":52,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":123,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":53,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":170,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/mongoose",{"_index":121,"title":{},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":168,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"modules/PatientModule.html":{},"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":516,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":155,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":208,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["nhc",{"_index":233,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"miscellaneous/variables.html":{}}}],["nif",{"_index":232,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":539,"title":{},"body":{"index.html":{}}}],["notfoundexception",{"_index":198,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PatientService.html":{}}}],["npm",{"_index":556,"title":{},"body":{"index.html":{}}}],["nurse",{"_index":362,"title":{},"body":{"interfaces/Professional.html":{},"miscellaneous/typealiases.html":{}}}],["open",{"_index":575,"title":{},"body":{"index.html":{}}}],["optional",{"_index":44,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["out",{"_index":113,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["overview",{"_index":604,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":511,"title":{"dependencies.html":{}},"body":{}}],["param",{"_index":286,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["parameters",{"_index":42,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["pass",{"_index":455,"title":{},"body":{"injectables/UserService.html":{}}}],["passport",{"_index":249,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":167,"title":{},"body":{"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["passportmodule.register",{"_index":174,"title":{},"body":{"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["passportstrategy",{"_index":247,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["passportstrategy(strategy",{"_index":252,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["password",{"_index":261,"title":{},"body":{"classes/LoginUserDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["patient",{"_index":23,"title":{"interfaces/Patient.html":{}},"body":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"classes/ProfessionalDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["patient.save",{"_index":355,"title":{},"body":{"injectables/PatientService.html":{}}}],["patient/patient.module",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["patientcontroller",{"_index":264,"title":{"controllers/PatientController.html":{}},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{},"coverage.html":{}}}],["patientdto",{"_index":273,"title":{"classes/PatientDto.html":{}},"body":{"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"coverage.html":{}}}],["patientmodel",{"_index":340,"title":{},"body":{"injectables/PatientService.html":{}}}],["patientmodule",{"_index":108,"title":{"modules/PatientModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PatientModule.html":{},"modules.html":{},"overview.html":{}}}],["patients",{"_index":266,"title":{},"body":{"controllers/PatientController.html":{}}}],["patientschema",{"_index":331,"title":{},"body":{"modules/PatientModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["patientservice",{"_index":290,"title":{"injectables/PatientService.html":{}},"body":{"controllers/PatientController.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"coverage.html":{},"overview.html":{}}}],["payload",{"_index":197,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["please",{"_index":585,"title":{},"body":{"index.html":{}}}],["post",{"_index":144,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["postalcode",{"_index":12,"title":{},"body":{"interfaces/Address.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["prefix",{"_index":139,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":205,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{}}}],["process.env.jwtkey",{"_index":180,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["production",{"_index":565,"title":{},"body":{"index.html":{}}}],["professional",{"_index":24,"title":{"interfaces/Professional.html":{}},"body":{"interfaces/Address.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["professional.save",{"_index":429,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["professional/professional.module",{"_index":118,"title":{},"body":{"modules/AppModule.html":{}}}],["professionalcontroller",{"_index":364,"title":{"controllers/ProfessionalController.html":{}},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"coverage.html":{}}}],["professionaldto",{"_index":371,"title":{"classes/ProfessionalDto.html":{}},"body":{"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["professionalmodel",{"_index":417,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["professionalmodule",{"_index":109,"title":{"modules/ProfessionalModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ProfessionalModule.html":{},"modules.html":{},"overview.html":{}}}],["professionals",{"_index":366,"title":{},"body":{"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["professionalschema",{"_index":411,"title":{},"body":{"modules/ProfessionalModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["professionalservice",{"_index":381,"title":{"injectables/ProfessionalService.html":{}},"body":{"controllers/ProfessionalController.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{},"overview.html":{}}}],["professionaltype",{"_index":359,"title":{},"body":{"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["professions",{"_index":360,"title":{},"body":{"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{}}}],["progressive",{"_index":538,"title":{},"body":{"index.html":{}}}],["project",{"_index":576,"title":{},"body":{"index.html":{}}}],["promise",{"_index":146,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["properties",{"_index":9,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{}}}],["providers",{"_index":101,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["put",{"_index":288,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["put('/:id",{"_index":283,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["read",{"_index":586,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":91,"title":{},"body":{"controllers/AppController.html":{},"classes/LoginUserDto.html":{},"injectables/PatientService.html":{},"injectables/ProfessionalService.html":{}}}],["reflect",{"_index":523,"title":{},"body":{"dependencies.html":{}}}],["register",{"_index":471,"title":{},"body":{"controllers/UsersController.html":{}}}],["registeruser",{"_index":438,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["registeruser(registeruserdto",{"_index":445,"title":{},"body":{"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["registeruserdto",{"_index":431,"title":{"classes/RegisterUserDto.html":{}},"body":{"classes/RegisterUserDto.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["registeruserdto.email",{"_index":459,"title":{},"body":{"injectables/UserService.html":{}}}],["repository",{"_index":554,"title":{},"body":{"index.html":{}}}],["req",{"_index":285,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["request",{"_index":377,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["required",{"_index":623,"title":{},"body":{"miscellaneous/variables.html":{}}}],["reset",{"_index":112,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["response",{"_index":57,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/LoginResponse.html":{},"coverage.html":{}}}],["result",{"_index":25,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["result.password",{"_index":211,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":27,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":92,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["returns",{"_index":46,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/PatientController.html":{},"injectables/PatientService.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["rimraf",{"_index":526,"title":{},"body":{"dependencies.html":{}}}],["rs",{"_index":134,"title":{},"body":{"injectables/AppService.html":{}}}],["run",{"_index":560,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":528,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":543,"title":{},"body":{"index.html":{}}}],["schema",{"_index":334,"title":{},"body":{"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{}}}],["secondsurname",{"_index":229,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["secret",{"_index":179,"title":{},"body":{"modules/AuthModule.html":{}}}],["secretorkey",{"_index":256,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["server",{"_index":544,"title":{},"body":{"index.html":{}}}],["service/auth.service",{"_index":250,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["session",{"_index":177,"title":{},"body":{"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"injectables/UserService.html":{},"modules/UsersModule.html":{}}}],["session.aborttransaction",{"_index":461,"title":{},"body":{"injectables/UserService.html":{}}}],["session.committransaction",{"_index":460,"title":{},"body":{"injectables/UserService.html":{}}}],["session.endsession",{"_index":466,"title":{},"body":{"injectables/UserService.html":{}}}],["session.starttransaction",{"_index":454,"title":{},"body":{"injectables/UserService.html":{}}}],["side",{"_index":545,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":181,"title":{},"body":{"modules/AuthModule.html":{}}}],["something",{"_index":78,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["source",{"_index":4,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/CommonModule.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"modules/PatientModule.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"modules/ProfessionalModule.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"index.html":{}}}],["sponsors",{"_index":579,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":535,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../patient.interface.ts",{"_index":611,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../patient.schema.ts",{"_index":614,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../professional.interface.ts",{"_index":612,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../professional.schema.ts",{"_index":615,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../user",{"_index":610,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/.../user.schema.ts",{"_index":616,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/app.controller.ts",{"_index":84,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":87,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":114,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":132,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":133,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/app/service/auth.service.ts",{"_index":184,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/app/service/auth.service.ts:11",{"_index":190,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/app/service/auth.service.ts:15",{"_index":193,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/app/service/auth.service.ts:24",{"_index":192,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/app/service/auth.service.ts:36",{"_index":196,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/app/strategy/jwt",{"_index":239,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":165,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/domain/dto/login",{"_index":200,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"coverage.html":{}}}],["src/auth/domain/dto/payload",{"_index":203,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/JwtPayLoad.html":{},"coverage.html":{}}}],["src/auth/ui/auth.controller.ts",{"_index":138,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/ui/auth.controller.ts:14",{"_index":145,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/common/common.module.ts",{"_index":221,"title":{},"body":{"modules/CommonModule.html":{}}}],["src/common/exceptions/exceptions",{"_index":31,"title":{},"body":{"classes/AllExceptionsFilter.html":{},"coverage.html":{}}}],["src/common/interfaces/user",{"_index":6,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/main.ts",{"_index":498,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/patient/app/service/patient.service.ts",{"_index":335,"title":{},"body":{"injectables/PatientService.html":{},"coverage.html":{}}}],["src/patient/app/service/patient.service.ts:12",{"_index":343,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:16",{"_index":344,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:20",{"_index":342,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:24",{"_index":341,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:29",{"_index":346,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/app/service/patient.service.ts:8",{"_index":339,"title":{},"body":{"injectables/PatientService.html":{}}}],["src/patient/domain/dto/patient",{"_index":307,"title":{},"body":{"classes/PatientDto.html":{},"injectables/PatientService.html":{},"coverage.html":{}}}],["src/patient/domain/models/patient.interface",{"_index":325,"title":{},"body":{"classes/PatientDto.html":{},"injectables/PatientService.html":{}}}],["src/patient/domain/models/patient.interface.ts",{"_index":223,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/patient/infrastructure/mongodb/patient.schema.ts",{"_index":505,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/patient/patient.module.ts",{"_index":329,"title":{},"body":{"modules/PatientModule.html":{}}}],["src/patient/ui/patient.controller.ts",{"_index":265,"title":{},"body":{"controllers/PatientController.html":{},"coverage.html":{}}}],["src/patient/ui/patient.controller.ts:16",{"_index":278,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:21",{"_index":281,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:26",{"_index":277,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:31",{"_index":274,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/patient/ui/patient.controller.ts:36",{"_index":284,"title":{},"body":{"controllers/PatientController.html":{}}}],["src/professional/app/service/professional.service.ts",{"_index":413,"title":{},"body":{"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["src/professional/app/service/professional.service.ts:11",{"_index":420,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:16",{"_index":422,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:20",{"_index":419,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:24",{"_index":418,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:29",{"_index":423,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/app/service/professional.service.ts:7",{"_index":416,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["src/professional/domain/dto/professional",{"_index":394,"title":{},"body":{"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"coverage.html":{}}}],["src/professional/domain/models/professional.interface",{"_index":406,"title":{},"body":{"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{}}}],["src/professional/domain/models/professional.interface.ts",{"_index":357,"title":{},"body":{"interfaces/Professional.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/professional/infrastructure/mongodb/professional.schema.ts",{"_index":507,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/professional/professional.module.ts",{"_index":409,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["src/professional/ui/professional.controller.ts",{"_index":365,"title":{},"body":{"controllers/ProfessionalController.html":{},"coverage.html":{}}}],["src/professional/ui/professional.controller.ts:17",{"_index":376,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:22",{"_index":378,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:27",{"_index":374,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:32",{"_index":372,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/professional/ui/professional.controller.ts:37",{"_index":379,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["src/users/app/service/user.service",{"_index":201,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/users/app/service/user.service.ts",{"_index":435,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/app/service/user.service.ts:14",{"_index":446,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/app/service/user.service.ts:33",{"_index":443,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/app/service/user.service.ts:37",{"_index":444,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/app/service/user.service.ts:9",{"_index":440,"title":{},"body":{"injectables/UserService.html":{}}}],["src/users/domain/dto/user",{"_index":432,"title":{},"body":{"classes/RegisterUserDto.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["src/users/domain/models/user.interface",{"_index":204,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UserService.html":{}}}],["src/users/domain/models/user.interface.ts",{"_index":434,"title":{},"body":{"interfaces/User.html":{},"coverage.html":{}}}],["src/users/infrastructure/mongodb/user.schema.ts",{"_index":508,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/users/ui/users.controller.ts",{"_index":470,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/ui/users.controller.ts:15",{"_index":474,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/ui/users.controller.ts:22",{"_index":473,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":171,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":485,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":561,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":564,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":566,"title":{},"body":{"index.html":{}}}],["started",{"_index":537,"title":{"index.html":{}},"body":{}}],["starter",{"_index":553,"title":{},"body":{"index.html":{}}}],["statements",{"_index":492,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":59,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["status(status",{"_index":73,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["stay",{"_index":589,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":173,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["strategy.ts",{"_index":240,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["strategy.ts:19",{"_index":245,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["strategy.ts:9",{"_index":243,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["street",{"_index":13,"title":{},"body":{"interfaces/Address.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["streetnumber",{"_index":14,"title":{},"body":{"interfaces/Address.html":{},"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/variables.html":{}}}],["string",{"_index":15,"title":{},"body":{"interfaces/Address.html":{},"controllers/AppController.html":{},"injectables/AppService.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"miscellaneous/variables.html":{}}}],["success",{"_index":75,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["super",{"_index":253,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["support",{"_index":580,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":600,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":530,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":510,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":509,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":569,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":572,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":571,"title":{},"body":{"index.html":{}}}],["tests",{"_index":568,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":578,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":93,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.login(loginuserdto",{"_index":160,"title":{},"body":{"controllers/AuthController.html":{}}}],["this.authservice.validateuserbyjwt(payload",{"_index":260,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["this.createjwtpayload(result",{"_index":212,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.jwtservice.sign(data",{"_index":218,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.patientmodel(patientdto",{"_index":354,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.find",{"_index":351,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyid(id",{"_index":352,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyidanddelete(id",{"_index":353,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientmodel.findbyidandupdate",{"_index":356,"title":{},"body":{"injectables/PatientService.html":{}}}],["this.patientservice.createpatient(patientdto",{"_index":304,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.deletepatient(id",{"_index":302,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.getallpatients",{"_index":298,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.getpatient(id",{"_index":300,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.patientservice.updatepatient(id",{"_index":306,"title":{},"body":{"controllers/PatientController.html":{}}}],["this.professionalmodel(professionaldto",{"_index":428,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.find",{"_index":425,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyid(id",{"_index":426,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyidanddelete(id",{"_index":427,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalmodel.findbyidandupdate",{"_index":430,"title":{},"body":{"injectables/ProfessionalService.html":{}}}],["this.professionalservice.createprofessional(professionaldto",{"_index":392,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.deleteprofessional(id",{"_index":390,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.getallprofessionals",{"_index":387,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.getprofessional(id",{"_index":388,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.professionalservice.updateprofessional(id",{"_index":393,"title":{},"body":{"controllers/ProfessionalController.html":{}}}],["this.usermodel(registeruserdto",{"_index":451,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.create",{"_index":458,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.find",{"_index":468,"title":{},"body":{"injectables/UserService.html":{}}}],["this.usermodel.findone",{"_index":467,"title":{},"body":{"injectables/UserService.html":{}}}],["this.userservice.findbyemail(loginuserdto.email",{"_index":206,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.findbyemail(payload.email",{"_index":220,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.userservice.getallusers",{"_index":481,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.userservice.registeruser(registeruserdto",{"_index":480,"title":{},"body":{"controllers/UsersController.html":{}}}],["throw",{"_index":207,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/UserService.html":{}}}],["token",{"_index":219,"title":{},"body":{"injectables/AuthService.html":{},"interfaces/LoginResponse.html":{}}}],["touch",{"_index":590,"title":{},"body":{"index.html":{}}}],["true",{"_index":622,"title":{},"body":{"miscellaneous/variables.html":{}}}],["try",{"_index":453,"title":{},"body":{"injectables/UserService.html":{}}}],["twitter",{"_index":596,"title":{},"body":{"index.html":{}}}],["type",{"_index":16,"title":{},"body":{"interfaces/Address.html":{},"classes/AllExceptionsFilter.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"interfaces/Insurance.html":{},"interfaces/JwtPayLoad.html":{},"injectables/JwtStrategy.html":{},"interfaces/LoginResponse.html":{},"classes/LoginUserDto.html":{},"interfaces/Patient.html":{},"controllers/PatientController.html":{},"classes/PatientDto.html":{},"injectables/PatientService.html":{},"interfaces/Professional.html":{},"controllers/ProfessionalController.html":{},"classes/ProfessionalDto.html":{},"injectables/ProfessionalService.html":{},"classes/RegisterUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":608,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["types.interface",{"_index":227,"title":{},"body":{"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{}}}],["types.interface.ts",{"_index":7,"title":{},"body":{"interfaces/Address.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typescript",{"_index":552,"title":{},"body":{"index.html":{}}}],["ui",{"_index":531,"title":{},"body":{"dependencies.html":{}}}],["ui/auth.controller",{"_index":166,"title":{},"body":{"modules/AuthModule.html":{}}}],["ui/patient.controller",{"_index":330,"title":{},"body":{"modules/PatientModule.html":{}}}],["ui/professional.controller",{"_index":410,"title":{},"body":{"modules/ProfessionalModule.html":{}}}],["ui/users.controller",{"_index":486,"title":{},"body":{"modules/UsersModule.html":{}}}],["unauthorizedexception",{"_index":199,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["undefined",{"_index":312,"title":{},"body":{"classes/PatientDto.html":{},"classes/ProfessionalDto.html":{}}}],["unique",{"_index":621,"title":{},"body":{"miscellaneous/variables.html":{}}}],["unit",{"_index":567,"title":{},"body":{"index.html":{}}}],["updatepatient",{"_index":336,"title":{},"body":{"injectables/PatientService.html":{}}}],["updatepatient(id",{"_index":345,"title":{},"body":{"injectables/PatientService.html":{}}}],["updateprofessional",{"_index":271,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["updateprofessional(@param('id",{"_index":305,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{}}}],["updateprofessional(id",{"_index":282,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"injectables/ProfessionalService.html":{}}}],["useguards",{"_index":289,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["useguards(authguard",{"_index":297,"title":{},"body":{"controllers/PatientController.html":{},"controllers/ProfessionalController.html":{},"controllers/UsersController.html":{}}}],["user",{"_index":151,"title":{"interfaces/User.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"classes/LoginUserDto.html":{},"interfaces/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["user._id",{"_index":217,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.email",{"_index":215,"title":{},"body":{"injectables/AuthService.html":{}}}],["usermodel",{"_index":441,"title":{},"body":{"injectables/UserService.html":{}}}],["userregister",{"_index":450,"title":{},"body":{"injectables/UserService.html":{}}}],["userregister.db.startsession",{"_index":452,"title":{},"body":{"injectables/UserService.html":{}}}],["users/app/service/user.service",{"_index":127,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["userschema",{"_index":487,"title":{},"body":{"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["userscontroller",{"_index":469,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":126,"title":{"injectables/UserService.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{},"overview.html":{}}}],["usersmodule",{"_index":110,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usertype",{"_index":22,"title":{},"body":{"interfaces/Address.html":{},"interfaces/Insurance.html":{},"interfaces/Patient.html":{},"classes/PatientDto.html":{},"interfaces/Professional.html":{},"classes/ProfessionalDto.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["validate",{"_index":241,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(payload",{"_index":244,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validateuserbyjwt",{"_index":186,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuserbyjwt(payload",{"_index":194,"title":{},"body":{"injectables/AuthService.html":{}}}],["value",{"_index":618,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":506,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":613,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["void",{"_index":47,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["watch",{"_index":562,"title":{},"body":{"index.html":{}}}],["website",{"_index":594,"title":{},"body":{"index.html":{}}}],["went",{"_index":79,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["working",{"_index":136,"title":{},"body":{"injectables/AppService.html":{}}}],["wrong",{"_index":80,"title":{},"body":{"classes/AllExceptionsFilter.html":{}}}],["you'd",{"_index":583,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":111,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PatientModule.html":{},"modules/ProfessionalModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"interfaces/Address.html":{"url":"interfaces/Address.html","title":"interface - Address","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Address\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/interfaces/user-types.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        city\n                                \n                                \n                                        doorNumber\n                                \n                                \n                                        postalCode\n                                \n                                \n                                        street\n                                \n                                \n                                        streetNumber\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        city\n                                    \n                                \n                                \n                                    \n                                        city:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        doorNumber\n                                    \n                                \n                                \n                                    \n                                        doorNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        postalCode\n                                    \n                                \n                                \n                                    \n                                        postalCode:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        street\n                                    \n                                \n                                \n                                    \n                                        street:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        streetNumber\n                                    \n                                \n                                \n                                    \n                                        streetNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export type Gender = 'Male' | 'Female' | 'Other';\n\nexport type UserType = 'Patient' | 'Professional';\n\nexport interface Address {\n    city: string;\n    street: string;\n    streetNumber: string;\n    doorNumber: string;\n    postalCode: string;\n};\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AllExceptionsFilter.html":{"url":"classes/AllExceptionsFilter.html","title":"class - AllExceptionsFilter","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AllExceptionsFilter\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/exceptions/exceptions-filter.ts\n        \n\n\n            \n                Extends\n            \n            \n                    BaseExceptionFilter\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                catch\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            catch\n                        \n                        \n                    \n                \n            \n            \n                \ncatch(exception: any, host: ArgumentsHost)\n                \n            \n\n\n            \n                \n                    Defined in src/common/exceptions/exceptions-filter.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    exception\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    host\n                                    \n                                            ArgumentsHost\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Catch, ArgumentsHost, Inject, HttpServer, HttpStatus } from '@nestjs/common';\nimport { BaseExceptionFilter } from '@nestjs/core';\n\n@Catch()\nexport class AllExceptionsFilter extends BaseExceptionFilter {\n\n    catch(exception: any, host: ArgumentsHost) {\n        const ctx = host.switchToHttp();\n        const response = ctx.getResponse();\n\n        let status = HttpStatus.INTERNAL_SERVER_ERROR;\n\n        const message = (exception instanceof Error) ? exception.message : exception.message.error;\n\n        if (exception.status === HttpStatus.NOT_FOUND) {\n            status = HttpStatus.NOT_FOUND;\n        }\n\n        if (exception.status === HttpStatus.SERVICE_UNAVAILABLE) {\n            status = HttpStatus.SERVICE_UNAVAILABLE;\n        }\n\n        if (exception.status === HttpStatus.NOT_ACCEPTABLE) {\n            status = HttpStatus.NOT_ACCEPTABLE;\n        }\n\n        if (exception.status === HttpStatus.EXPECTATION_FAILED) {\n            status = HttpStatus.EXPECTATION_FAILED;\n        }\n\n        if (exception.status === HttpStatus.BAD_REQUEST) {\n            status = HttpStatus.BAD_REQUEST;\n        }\n\n        if (exception.status === HttpStatus.UNAUTHORIZED) {\n            status = HttpStatus.UNAUTHORIZED;\n        }\n\n        response\n            .status(status)\n            .json({\n                status,\n                success: false,\n                error: message,\n                message: (status === HttpStatus.INTERNAL_SERVER_ERROR) ? 'It looks like something went wrong...' : ''\n            });\n    }\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) { }\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nPatientModule\n\nPatientModule\n\nAppModule -->\n\nPatientModule->AppModule\n\n\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nAppModule -->\n\nProfessionalModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            CommonModule\n                        \n                        \n                            PatientModule\n                        \n                        \n                            ProfessionalModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PatientModule } from './patient/patient.module';\nimport { ProfessionalModule } from './professional/professional.module';\nimport { CommonModule } from './common/common.module';\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { ConfigModule } from '@nestjs/config';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { UserService } from './users/app/service/user.service';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    PatientModule,\n    ProfessionalModule,\n    CommonModule,\n    MongooseModule.forRoot(`mongodb+srv://${process.env.USER}:${process.env.PASS}@${process.env.HOST}?retryWrites=true&w=majority`),\n    AuthModule,\n    UsersModule\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getHello\n                        \n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'RS-HIS Backend Working!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/UI/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                login\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/auth/UI/auth.controller.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, Body } from '@nestjs/common';\nimport { AuthService } from '../app/service/auth.service';\nimport { LoginUserDto } from '../domain/dto/login-user-dto';\nimport { LoginResponse } from '../domain/dto/login-response-dto';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Authorizations')\n@Controller('login')\nexport class AuthController {\n\n    constructor(private authService: AuthService) { }\n\n    @Post()\n    async login(@Body() loginUserDto: LoginUserDto): Promise {\n        let result = await this.authService.login(loginUserDto);\n        return result;\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './app/service/auth.service';\nimport { AuthController } from './UI/auth.controller';\nimport { PassportModule } from '@nestjs/passport';\nimport { JwtModule } from '@nestjs/jwt';\nimport { UsersModule } from 'src/users/users.module';\nimport { JwtStrategy } from './app/strategy/jwt-strategy';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    PassportModule.register({ defaultStrategy: 'jwt', session: false }),\n    JwtModule.register({\n      secret: `${process.env.JWTKEY}`,\n      signOptions: {\n        expiresIn: '3600s'\n      }\n    }),\n    UsersModule],\n  controllers: [AuthController],\n  providers: [AuthService, JwtStrategy]\n})\nexport class AuthModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/app/service/auth.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createJwtPayload\n                            \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUserByJwt\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/app/service/auth.service.ts:11\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createJwtPayload\n                        \n                        \n                    \n                \n            \n            \n                \ncreateJwtPayload(user: User)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/app/service/auth.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                User\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         LoginResponse\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            login\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    login(loginUserDto: LoginUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/app/service/auth.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    loginUserDto\n                                    \n                                                LoginUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validateUserByJwt\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUserByJwt(payload: JwtPayLoad)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/app/service/auth.service.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayLoad\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, NotFoundException, UnauthorizedException } from '@nestjs/common';\nimport { LoginUserDto } from 'src/auth/domain/dto/login-user-dto';\nimport { UserService } from 'src/users/app/service/user.service';\nimport { JwtService } from '@nestjs/jwt';\nimport *  as  bcrypt from 'bcrypt';\nimport { JwtPayLoad } from 'src/auth/domain/dto/payload-dto';\nimport { User } from 'src/users/domain/models/user.interface';\nimport { LoginResponse } from 'src/auth/domain/dto/login-response-dto';\n\n@Injectable()\nexport class AuthService {\n\n    constructor(private userService: UserService, private jwtService: JwtService) { };\n\n    async login(loginUserDto: LoginUserDto): Promise {\n        let result = await this.userService.findByEmail(loginUserDto.email);\n        if (!result) throw new NotFoundException();\n        let checkPass = await bcrypt.compare(loginUserDto.password, result.password);\n        if (!checkPass) throw new UnauthorizedException();\n\n        return this.createJwtPayload(result);\n    }\n\n    createJwtPayload(user: User): LoginResponse {\n        let data = {\n            email: user.email,\n            id: user._id\n        }\n        let jwt = this.jwtService.sign(data);\n        return {\n            expiresIn: '3600s',\n            token: jwt\n        }\n    }\n\n    async validateUserByJwt(payload: JwtPayLoad): Promise {\n        let user = await this.userService.findByEmail(payload.email);\n        if (user) return user;\n        throw new UnauthorizedException();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CommonModule.html":{"url":"modules/CommonModule.html","title":"module - CommonModule","body":"\n                   \n\n\n\n\n    Modules\n    CommonModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/common/common.module.ts\n        \n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\n\n@Module({})\nexport class CommonModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Insurance.html":{"url":"interfaces/Insurance.html","title":"interface - Insurance","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Insurance\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/models/patient.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        cardNumber\n                                \n                                \n                                        insuranceCompanyName\n                                \n                                \n                                        insuranceType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        cardNumber\n                                    \n                                \n                                \n                                    \n                                        cardNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insuranceCompanyName\n                                    \n                                \n                                \n                                    \n                                        insuranceCompanyName:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insuranceType\n                                    \n                                \n                                \n                                    \n                                        insuranceType:         InsuranceType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         InsuranceType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Gender, UserType, Address } from 'src/common/interfaces/user-types.interface';\n\nexport interface Patient {\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthDate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    nhc: string;\n    insurances: Insurance[];\n}\n\nexport interface Insurance {\n    insuranceCompanyName: string;\n    insuranceType: InsuranceType;\n    cardNumber: string;\n}\n\ntype InsuranceType = 'Health' | 'Family' | 'Dental';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/JwtPayLoad.html":{"url":"interfaces/JwtPayLoad.html","title":"interface - JwtPayLoad","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  JwtPayLoad\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/domain/dto/payload-dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        email\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface JwtPayLoad {\n    email: string\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/app/strategy/jwt-strategy.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/app/strategy/jwt-strategy.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            validate\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: JwtPayLoad)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/app/strategy/jwt-strategy.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                JwtPayLoad\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     {}\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, UnauthorizedException, Logger } from '@nestjs/common';\nimport { PassportStrategy } from \"@nestjs/passport\";\nimport { Strategy, ExtractJwt } from 'passport-jwt';\nimport { AuthService } from '../service/auth.service';\nimport { JwtPayLoad } from '../../domain/dto/payload-dto';\n\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n\n    constructor(private authService: AuthService) {\n        super({\n            jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n            secretOrKey: `${process.env.JWTKEY}`\n        })\n        Logger.log(\"Creando el jwtStrategy\");\n    }\n\n    async validate(payload: JwtPayLoad) {\n        Logger.log(\"Entrando a Validate\");\n\n        const user = await this.authService.validateUserByJwt(payload);\n        if (!user) throw new UnauthorizedException();\n        return user;\n\n    }\n\n}\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/LoginResponse.html":{"url":"interfaces/LoginResponse.html","title":"interface - LoginResponse","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  LoginResponse\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/domain/dto/login-response-dto.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        expiresIn\n                                \n                                \n                                        token\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        expiresIn\n                                    \n                                \n                                \n                                    \n                                        expiresIn:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        token\n                                    \n                                \n                                \n                                    \n                                        token:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface LoginResponse {\n    expiresIn: string;\n    token: string;\n}\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/LoginUserDto.html":{"url":"classes/LoginUserDto.html","title":"class - LoginUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  LoginUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/domain/dto/login-user-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Readonly\n                                email\n                            \n                            \n                                    Readonly\n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/domain/dto/login-user-dto.ts:2\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                                Readonly\n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/auth/domain/dto/login-user-dto.ts:3\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class LoginUserDto {\n    readonly email: string;\n    readonly password: string;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Patient.html":{"url":"interfaces/Patient.html","title":"interface - Patient","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Patient\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/models/patient.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        birthDate\n                                \n                                \n                                        firstSurname\n                                \n                                \n                                        gender\n                                \n                                \n                                        insurances\n                                \n                                \n                                        name\n                                \n                                \n                                        nhc\n                                \n                                \n                                        nif\n                                \n                                \n                                        secondSurname\n                                \n                                \n                                        userType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                    \n                                \n                                \n                                    \n                                        birthDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        insurances\n                                    \n                                \n                                \n                                    \n                                        insurances:         Insurance[]\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Insurance[]\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nhc\n                                    \n                                \n                                \n                                    \n                                        nhc:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nif\n                                    \n                                \n                                \n                                    \n                                        nif:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userType\n                                    \n                                \n                                \n                                    \n                                        userType:         UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Gender, UserType, Address } from 'src/common/interfaces/user-types.interface';\n\nexport interface Patient {\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthDate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    nhc: string;\n    insurances: Insurance[];\n}\n\nexport interface Insurance {\n    insuranceCompanyName: string;\n    insuranceType: InsuranceType;\n    cardNumber: string;\n}\n\ntype InsuranceType = 'Health' | 'Family' | 'Dental';\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PatientController.html":{"url":"controllers/PatientController.html","title":"controller - PatientController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PatientController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/UI/patient.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /patients\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createPatient\n                            \n                            \n                                deletePatient\n                            \n                            \n                                getAllPatients\n                            \n                            \n                                getPatient\n                            \n                            \n                                updateProfessional\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createPatient\n                        \n                        \n                    \n                \n            \n            \n                \ncreatePatient(patientDto: PatientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/patient/UI/patient.controller.ts:31\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deletePatient\n                        \n                        \n                    \n                \n            \n            \n                \ndeletePatient(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/UI/patient.controller.ts:26\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllPatients\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllPatients()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/patient/UI/patient.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPatient\n                        \n                        \n                    \n                \n            \n            \n                \ngetPatient(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/UI/patient.controller.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProfessional\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProfessional(id: string, patientDto: PatientDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/patient/UI/patient.controller.ts:36\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Param, Delete, Post, Body, Put, UseGuards } from '@nestjs/common';\nimport { PatientService } from '../app/service/patient.service';\nimport { Patient } from '../domain/models/patient.interface';\nimport { ApiTags } from '@nestjs/swagger'\nimport { PatientDto } from '../domain/dto/patient-dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n@ApiTags('Patients')\n@Controller('/patients')\n@UseGuards(AuthGuard())\nexport class PatientController {\n\n    constructor(private patientService: PatientService) { }\n\n    @Get()\n    getAllPatients(): Promise {\n        return this.patientService.getAllPatients();\n    }\n\n    @Get('/:id')\n    getPatient(@Param('id') id: string): Promise {\n        return this.patientService.getPatient(id);\n    }\n\n    @Delete('/:id')\n    deletePatient(@Param('id') id: string): Promise {\n        return this.patientService.deletePatient(id);\n    }\n\n    @Post()\n    createPatient(@Body() patientDto: PatientDto): Promise {\n        return this.patientService.createPatient(patientDto);\n    }\n\n    @Put('/:id')\n    updateProfessional(@Param('id') id: string, @Body() patientDto: PatientDto): Promise {\n        return this.patientService.updatePatient(id, patientDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatientDto.html":{"url":"classes/PatientDto.html","title":"class - PatientDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatientDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/domain/dto/patient-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                birthdate\n                            \n                            \n                                firstSurname\n                            \n                            \n                                gender\n                            \n                            \n                                insuranceCompanies\n                            \n                            \n                                name\n                            \n                            \n                                nhc\n                            \n                            \n                                nif\n                            \n                            \n                                secondSurname\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:6\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({properties: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:30\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:18\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:12\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:16\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            insuranceCompanies\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Insurance[]\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:34\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:10\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nhc\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:32\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nif\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:20\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:14\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/patient/domain/dto/patient-dto.ts:8\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserType, Gender, Address } from 'src/common/interfaces/user-types.interface';\nimport { Insurance } from 'src/patient/domain/models/patient.interface';\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class PatientDto {\n    _id: string;\n    @ApiProperty({ enum: ['Patient', 'Professional'] })\n    userType: UserType;\n    @ApiProperty()\n    name: string;\n    @ApiProperty()\n    firstSurname: string;\n    @ApiProperty()\n    secondSurname: string;\n    @ApiProperty({ enum: ['Male', 'Female', 'Other'] })\n    gender: Gender;\n    @ApiProperty()\n    birthdate: Date;\n    @ApiProperty()\n    nif: string;\n    @ApiProperty({\n        properties: {\n            city: { type: 'string' },\n            street: { type: 'string' },\n            streetNumber: { type: 'string' },\n            doorNumber: { type: 'string' },\n            postalCode: { type: 'string' }\n        }\n    })\n    address: Address;\n    @ApiProperty()\n    nhc: string;\n    @ApiProperty()\n    insuranceCompanies: Insurance[];\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PatientModule.html":{"url":"modules/PatientModule.html","title":"module - PatientModule","body":"\n                   \n\n\n\n\n    Modules\n    PatientModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PatientModule\n\n\n\ncluster_PatientModule_providers\n\n\n\n\nPatientService\n\nPatientService\n\n\n\nPatientModule\n\nPatientModule\n\nPatientModule -->\n\nPatientService->PatientModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/patient/patient.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PatientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PatientController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PatientController } from './UI/patient.controller';\nimport { PatientService } from './app/service/patient.service';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { patientSchema } from './infrastructure/MongoDB/patient.schema';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([{ name: 'Patient', schema: patientSchema }]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: false })\n  ],\n  controllers: [PatientController],\n  providers: [PatientService]\n})\nexport class PatientModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PatientService.html":{"url":"injectables/PatientService.html","title":"injectable - PatientService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  PatientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/patient/app/service/patient.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createPatient\n                            \n                            \n                                    Async\n                                deletePatient\n                            \n                            \n                                    Async\n                                getAllPatients\n                            \n                            \n                                    Async\n                                getPatient\n                            \n                            \n                                    Async\n                                updatePatient\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(patientModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/patient/app/service/patient.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        patientModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createPatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createPatient(patientDto: PatientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deletePatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deletePatient(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllPatients\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllPatients()\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getPatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getPatient(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updatePatient\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updatePatient(id: string, patientDto: PatientDto)\n                \n            \n\n\n            \n                \n                    Defined in src/patient/app/service/patient.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    patientDto\n                                    \n                                                PatientDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, NotFoundException, HttpException, HttpStatus } from '@nestjs/common';\nimport { Patient } from 'src/patient/domain/models/patient.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { PatientDto } from 'src/patient/domain/dto/patient-dto';\n\n@Injectable()\nexport class PatientService {\n\n    constructor(@InjectModel('Patient') private readonly patientModel: Model) { }\n\n    async getAllPatients(): Promise {\n        return await this.patientModel.find();\n    }\n\n    async getPatient(id: string): Promise {\n        return await this.patientModel.findById(id);\n    }\n\n    async deletePatient(id: string): Promise {\n        return await this.patientModel.findByIdAndDelete(id);\n    }\n\n    async createPatient(patientDto: PatientDto): Promise {\n        const patient = new this.patientModel(patientDto);\n        return await patient.save();\n    }\n\n    async updatePatient(id: string, patientDto: PatientDto): Promise {\n        return await this.patientModel.findByIdAndUpdate({ _id: id }, patientDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/Professional.html":{"url":"interfaces/Professional.html","title":"interface - Professional","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  Professional\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/domain/models/professional.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        address\n                                \n                                \n                                        birthDate\n                                \n                                \n                                        firstSurname\n                                \n                                \n                                        gender\n                                \n                                \n                                        medicalBoardNumber\n                                \n                                \n                                        name\n                                \n                                \n                                        nif\n                                \n                                \n                                        professionalType\n                                \n                                \n                                        secondSurname\n                                \n                                \n                                        userType\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        address\n                                    \n                                \n                                \n                                    \n                                        address:         Address\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Address\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        birthDate\n                                    \n                                \n                                \n                                    \n                                        birthDate:         Date\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Date\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        firstSurname\n                                    \n                                \n                                \n                                    \n                                        firstSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        gender\n                                    \n                                \n                                \n                                    \n                                        gender:         Gender\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Gender\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        medicalBoardNumber\n                                    \n                                \n                                \n                                    \n                                        medicalBoardNumber:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        name\n                                    \n                                \n                                \n                                    \n                                        name:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        nif\n                                    \n                                \n                                \n                                    \n                                        nif:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        professionalType\n                                    \n                                \n                                \n                                    \n                                        professionalType:         Professions\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         Professions\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        secondSurname\n                                    \n                                \n                                \n                                    \n                                        secondSurname:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        userType\n                                    \n                                \n                                \n                                    \n                                        userType:         UserType\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         UserType\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        import { Gender, UserType, Address } from 'src/common/interfaces/user-types.interface';\n\nexport interface Professional {\n    name: string;\n    firstSurname: string;\n    secondSurname: string;\n    gender: Gender;\n    birthDate: Date;\n    nif: string;\n    address: Address;\n    userType: UserType;\n    medicalBoardNumber: string;\n    professionalType: Professions;\n}\n\nexport type Professions = 'Doctor' | 'Nurse' | 'Administrative';\n\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ProfessionalController.html":{"url":"controllers/ProfessionalController.html","title":"controller - ProfessionalController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ProfessionalController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/UI/professional.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                /professionals\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                createProfessional\n                            \n                            \n                                deleteProfessional\n                            \n                            \n                                getAllProfessionals\n                            \n                            \n                                getPatient\n                            \n                            \n                                updateProfessional\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            createProfessional\n                        \n                        \n                    \n                \n            \n            \n                \ncreateProfessional(professionalDto: ProfessionalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/professional/UI/professional.controller.ts:32\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            deleteProfessional\n                        \n                        \n                    \n                \n            \n            \n                \ndeleteProfessional(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Delete('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/UI/professional.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllProfessionals\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllProfessionals(request)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/professional/UI/professional.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    request\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getPatient\n                        \n                        \n                    \n                \n            \n            \n                \ngetPatient(id: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/UI/professional.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            updateProfessional\n                        \n                        \n                    \n                \n            \n            \n                \nupdateProfessional(id: string, professionalDto: ProfessionalDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Put('/:id')\n                \n            \n\n            \n                \n                    Defined in src/professional/UI/professional.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Req, Param, Delete, Post, Body, Put, UseGuards } from '@nestjs/common';\nimport { Professional } from '../domain/models/professional.interface';\nimport { ProfessionalService } from '../app/service/professional.service';\nimport { ApiTags } from '@nestjs/swagger'\nimport { ProfessionalDto } from '../domain/dto/professional-dto';\nimport { AuthGuard } from '@nestjs/passport';\n\n\n@ApiTags('Professionals')\n@Controller('/professionals')\n@UseGuards(AuthGuard())\nexport class ProfessionalController {\n\n    constructor(private professionalService: ProfessionalService) { }\n\n    @Get()\n    getAllProfessionals(@Req() request): Promise {\n        return this.professionalService.getAllProfessionals();\n    }\n\n    @Get('/:id')\n    getPatient(@Param('id') id: string): Promise {\n        return this.professionalService.getProfessional(id);\n    }\n\n    @Delete('/:id')\n    deleteProfessional(@Param('id') id: string): Promise {\n        return this.professionalService.deleteProfessional(id);\n    }\n\n    @Post()\n    createProfessional(@Body() professionalDto: ProfessionalDto): Promise {\n        return this.professionalService.createProfessional(professionalDto);\n    }\n\n    @Put('/:id')\n    updateProfessional(@Param('id') id: string, @Body() professionalDto: ProfessionalDto): Promise {\n        return this.professionalService.updateProfessional(id, professionalDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/ProfessionalDto.html":{"url":"classes/ProfessionalDto.html","title":"class - ProfessionalDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  ProfessionalDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/domain/dto/professional-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                _id\n                            \n                            \n                                address\n                            \n                            \n                                birthdate\n                            \n                            \n                                firstSurname\n                            \n                            \n                                gender\n                            \n                            \n                                medicalBoardNumber\n                            \n                            \n                                name\n                            \n                            \n                                nif\n                            \n                            \n                                professionalType\n                            \n                            \n                                secondSurname\n                            \n                            \n                                userType\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            _id\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:7\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            address\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Address\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({properties: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:31\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            birthdate\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Date\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:19\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            firstSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:13\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            gender\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Gender\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:17\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            medicalBoardNumber\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:33\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            name\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:11\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            nif\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:21\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            professionalType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         Professions\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:35\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            secondSurname\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:15\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            userType\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         UserType\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty({enum: undefined})\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/professional/domain/dto/professional-dto.ts:9\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { UserType, Gender, Address } from 'src/common/interfaces/user-types.interface'\nimport { Professions } from 'src/professional/domain/models/professional.interface'\nimport { ApiProperty } from '@nestjs/swagger';\n\nexport class ProfessionalDto {\n    @ApiProperty()\n    _id: string;\n    @ApiProperty({ enum: ['Patient', 'Professional'] })\n    userType: UserType;\n    @ApiProperty()\n    name: string;\n    @ApiProperty()\n    firstSurname: string;\n    @ApiProperty()\n    secondSurname: string;\n    @ApiProperty({ enum: ['Male', 'Female', 'Other'] })\n    gender: Gender;\n    @ApiProperty()\n    birthdate: Date;\n    @ApiProperty()\n    nif: string;\n    @ApiProperty({\n        properties: {\n            city: { type: 'string' },\n            street: { type: 'string' },\n            streetNumber: { type: 'string' },\n            doorNumber: { type: 'string' },\n            postalCode: { type: 'string' }\n        }\n    })\n    address: Address;\n    @ApiProperty()\n    medicalBoardNumber: string;\n    @ApiProperty()\n    professionalType: Professions;\n}\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ProfessionalModule.html":{"url":"modules/ProfessionalModule.html","title":"module - ProfessionalModule","body":"\n                   \n\n\n\n\n    Modules\n    ProfessionalModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ProfessionalModule\n\n\n\ncluster_ProfessionalModule_providers\n\n\n\n\nProfessionalService\n\nProfessionalService\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nProfessionalModule -->\n\nProfessionalService->ProfessionalModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/professional/professional.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            ProfessionalService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ProfessionalController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ProfessionalController } from './UI/professional.controller';\nimport { ProfessionalService } from './app/service/professional.service';\nimport { MongooseModule } from '@nestjs/mongoose'\nimport { professionalSchema } from './infrastructure/MongoDB/professional.schema';\nimport { PassportModule } from '@nestjs/passport';\n\n@Module({\n    imports: [\n        MongooseModule.forFeature([{ name: 'Professional', schema: professionalSchema }]),\n        PassportModule.register({ defaultStrategy: 'jwt', session: false }),\n    ],\n    controllers: [ProfessionalController],\n    providers: [ProfessionalService]\n})\nexport class ProfessionalModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ProfessionalService.html":{"url":"injectables/ProfessionalService.html","title":"injectable - ProfessionalService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  ProfessionalService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/professional/app/service/professional.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                createProfessional\n                            \n                            \n                                    Async\n                                deleteProfessional\n                            \n                            \n                                    Async\n                                getAllProfessionals\n                            \n                            \n                                    Async\n                                getProfessional\n                            \n                            \n                                    Async\n                                updateProfessional\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(professionalModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/professional/app/service/professional.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        professionalModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            createProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    createProfessional(professionalDto: ProfessionalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            deleteProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    deleteProfessional(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllProfessionals\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllProfessionals()\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfessional(id: string)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            updateProfessional\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    updateProfessional(id: string, professionalDto: ProfessionalDto)\n                \n            \n\n\n            \n                \n                    Defined in src/professional/app/service/professional.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    professionalDto\n                                    \n                                                ProfessionalDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Get } from '@nestjs/common';\nimport { Professional } from 'src/professional/domain/models/professional.interface';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose'\nimport { ProfessionalDto } from 'src/professional/domain/dto/professional-dto';\n@Injectable()\nexport class ProfessionalService {\n\n    constructor(@InjectModel('Professional') private readonly professionalModel: Model) { }\n\n    async getAllProfessionals(): Promise {\n        const professionals = await this.professionalModel.find();\n        return professionals;\n    }\n\n    async getProfessional(id: string): Promise {\n        return await this.professionalModel.findById(id);\n    }\n\n    async deleteProfessional(id: string): Promise {\n        return await this.professionalModel.findByIdAndDelete(id);\n    }\n\n    async createProfessional(professionalDto: ProfessionalDto): Promise {\n        const professional = new this.professionalModel(professionalDto);\n        return await professional.save();\n    }\n\n    async updateProfessional(id: string, professionalDto: ProfessionalDto): Promise {\n        return await this.professionalModel.findByIdAndUpdate({ _id: id }, professionalDto);\n    }\n}\n\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/RegisterUserDto.html":{"url":"classes/RegisterUserDto.html","title":"class - RegisterUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  RegisterUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/domain/dto/user-dto.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                email\n                            \n                            \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n        \n            Properties\n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            email\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/domain/dto/user-dto.ts:5\n                            \n                        \n\n\n            \n        \n        \n            \n                \n                    \n                        \n                        \n                            \n                            password\n                            \n                        \n                    \n                \n                    \n                        \n                            Type :         string\n\n                        \n                    \n                    \n                        \n                            Decorators : \n                            \n                            \n                                @ApiProperty()\n                            \n                        \n                    \n                        \n                            \n                                    Defined in src/users/domain/dto/user-dto.ts:7\n                            \n                        \n\n\n            \n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty } from \"@nestjs/swagger\";\n\nexport class RegisterUserDto {\n    @ApiProperty()\n    email: string;\n    @ApiProperty()\n    password: string;\n}\n\n    \n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/User.html":{"url":"interfaces/User.html","title":"interface - User","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/domain/models/user.interface.ts\n        \n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        _id\n                                \n                                \n                                        email\n                                \n                                \n                                        password\n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        _id\n                                    \n                                \n                                \n                                    \n                                        _id:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        email\n                                    \n                                \n                                \n                                    \n                                        email:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n                    \n                        \n                                \n                                    \n                                        \n                                        password\n                                    \n                                \n                                \n                                    \n                                        password:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface User {\n    _id: string,\n    email: string,\n    password: string\n}\n\n    \n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/app/service/user.service.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findByEmail\n                            \n                            \n                                    Async\n                                getAllUsers\n                            \n                            \n                                    Async\n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/users/app/service/user.service.ts:9\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            findByEmail\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    findByEmail(email: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/app/service/user.service.ts:33\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    email\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    getAllUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/users/app/service/user.service.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            Async\n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \n                    \n                    registerUser(registerUserDto: RegisterUserDto)\n                \n            \n\n\n            \n                \n                    Defined in src/users/app/service/user.service.ts:14\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger, BadGatewayException, ConflictException } from \"@nestjs/common\";\nimport { InjectModel } from '@nestjs/mongoose';\nimport { User } from 'src/users/domain/models/user.interface';\nimport { RegisterUserDto } from 'src/users/domain/dto/user-dto';\nimport { Model } from 'mongoose';\nimport *  as  bcrypt from \"bcrypt\";\n\n@Injectable()\nexport class UserService {\n\n    constructor(@InjectModel(\"User\") private userModel: Model) { }\n\n\n    async registerUser(registerUserDto: RegisterUserDto): Promise {\n\n        const UserRegister = new this.userModel(registerUserDto);\n        const session = await UserRegister.db.startSession();\n\n        try {\n            session.startTransaction();\n            let pass = await bcrypt.hash(registerUserDto.password, 10);\n            await this.userModel.create([{ \"email\": registerUserDto.email, \"password\": pass }], { session: session })\n            await session.commitTransaction();\n        } catch (error) {\n            await session.abortTransaction();\n            if (error.code === 11000) throw new ConflictException(\"Duplicated User\");\n            throw new BadGatewayException();\n        } finally {\n            session.endSession();\n        }\n    }\n\n    async findByEmail(email: string): Promise {\n        return this.userModel.findOne({ email: email });\n    }\n\n    async getAllUsers(): Promise {\n        return await this.userModel.find();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/UI/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                register\n            \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAllUsers\n                            \n                            \n                                registerUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            getAllUsers\n                        \n                        \n                    \n                \n            \n            \n                \ngetAllUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@UseGuards(undefined)\n                \n            \n\n            \n                \n                    Defined in src/users/UI/users.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                            registerUser\n                        \n                        \n                    \n                \n            \n            \n                \nregisterUser(registerUserDto: RegisterUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/UI/users.controller.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    registerUserDto\n                                    \n                                                RegisterUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Post, HttpException, HttpStatus, Logger, Body, Get, UseGuards, Req } from '@nestjs/common';\nimport { UserService } from '../app/service/user.service';\nimport { RegisterUserDto } from '../domain/dto/user-dto';\nimport { AuthGuard } from '@nestjs/passport';\nimport { User } from '../domain/models/user.interface';\nimport { ApiTags } from '@nestjs/swagger';\n\n@ApiTags('Registration')\n@Controller('register')\nexport class UsersController {\n\n    constructor(private userService: UserService) { }\n\n    @Post()\n    registerUser(\n        @Body() registerUserDto: RegisterUserDto): Promise {\n        return this.userService.registerUser(registerUserDto);\n    }\n\n    @Get()\n    @UseGuards(AuthGuard())\n    getAllUsers(): Promise {\n        return this.userService.getAllUsers();\n    }\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUserService \n\nUserService \n\n\n\nUsersModule\n\nUsersModule\n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UserService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UserService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './ui/users.controller';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { userSchema } from './infrastructure/MongoDB/user.schema';\nimport { PassportModule } from '@nestjs/passport';\nimport { UserService } from './app/service/user.service';\nimport { ConfigModule } from '@nestjs/config';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot(),\n    MongooseModule.forFeature([{ name: 'User', schema: userSchema }]),\n    PassportModule.register({ defaultStrategy: 'jwt', session: false }),\n  ],\n  exports: [UserService],\n  controllers: [UsersController],\n  providers: [UserService]\n})\nexport class UsersModule { }\n\n    \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/UI/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/app/service/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/auth/app/strategy/jwt-strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/domain/dto/login-response-dto.ts\n            \n            interface\n            LoginResponse\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/domain/dto/login-user-dto.ts\n            \n            class\n            LoginUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/domain/dto/payload-dto.ts\n            \n            interface\n            JwtPayLoad\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/exceptions/exceptions-filter.ts\n            \n            class\n            AllExceptionsFilter\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/common/interfaces/user-types.interface.ts\n            \n            interface\n            Address\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/patient/UI/patient.controller.ts\n            \n            controller\n            PatientController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/patient/app/service/patient.service.ts\n            \n            injectable\n            PatientService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/patient/domain/dto/patient-dto.ts\n            \n            class\n            PatientDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/patient/domain/models/patient.interface.ts\n            \n            interface\n            Insurance\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/patient/domain/models/patient.interface.ts\n            \n            interface\n            Patient\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/patient/infrastructure/MongoDB/patient.schema.ts\n            \n            variable\n            patientSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/professional/UI/professional.controller.ts\n            \n            controller\n            ProfessionalController\n            \n                0 %\n                (0/6)\n            \n        \n        \n            \n                \n                src/professional/app/service/professional.service.ts\n            \n            injectable\n            ProfessionalService\n            \n                0 %\n                (0/7)\n            \n        \n        \n            \n                \n                src/professional/domain/dto/professional-dto.ts\n            \n            class\n            ProfessionalDto\n            \n                0 %\n                (0/12)\n            \n        \n        \n            \n                \n                src/professional/domain/models/professional.interface.ts\n            \n            interface\n            Professional\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/professional/infrastructure/MongoDB/professional.schema.ts\n            \n            variable\n            professionalSchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/UI/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/app/service/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/domain/dto/user-dto.ts\n            \n            class\n            RegisterUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/domain/models/user.interface.ts\n            \n            interface\n            User\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/infrastructure/MongoDB/user.schema.ts\n            \n            variable\n            userSchema\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^7.0.0\n        \n            @nestjs/config : ^0.5.0\n        \n            @nestjs/core : ^7.0.0\n        \n            @nestjs/jwt : ^7.1.0\n        \n            @nestjs/mongoose : ^7.0.2\n        \n            @nestjs/passport : ^7.1.0\n        \n            @nestjs/platform-express : ^7.0.0\n        \n            @nestjs/swagger : ^4.5.12\n        \n            bcrypt : ^5.0.0\n        \n            migrate-mongoose : ^4.0.0\n        \n            passport : ^0.4.1\n        \n            passport-jwt : ^4.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^6.5.4\n        \n            swagger-ui-express : ^4.1.4\n    \n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        \n                            bootstrap\n                        \n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications, heavily inspired by Angular.\n    \n\n\n\n\n\n\n\n\n\n  \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\n  Nest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CommonModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PatientModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ProfessionalModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PatientModule\n\n\n\ncluster_PatientModule_providers\n\n\n\ncluster_ProfessionalModule\n\n\n\ncluster_ProfessionalModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCommonModule\n\nCommonModule\n\nAppModule -->\n\nCommonModule->AppModule\n\n\n\n\n\nPatientModule\n\nPatientModule\n\nAppModule -->\n\nPatientModule->AppModule\n\n\n\n\n\nProfessionalModule\n\nProfessionalModule\n\nAppModule -->\n\nProfessionalModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUserService \n\nUserService \n\nUserService  -->\n\nUsersModule->UserService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nPatientService\n\nPatientService\n\nPatientModule -->\n\nPatientService->PatientModule\n\n\n\n\n\nProfessionalService\n\nProfessionalService\n\nProfessionalModule -->\n\nProfessionalService->ProfessionalModule\n\n\n\n\n\nUserService\n\nUserService\n\nUsersModule -->\n\nUserService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        6 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    5 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    6 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    5 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    7 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Gender   (src/.../user-types.interface.ts)\n                        \n                        \n                            InsuranceType   (src/.../patient.interface.ts)\n                        \n                        \n                            Professions   (src/.../professional.interface.ts)\n                        \n                        \n                            UserType   (src/.../user-types.interface.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/common/interfaces/user-types.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Gender\n                \n            \n            \n                \n                        \"Male\" | \"Female\" | \"Other\"\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    UserType\n                \n            \n            \n                \n                        \"Patient\" | \"Professional\"\n\n                \n            \n        \n    \n    src/patient/domain/models/patient.interface.ts\n    \n    \n        \n            \n                \n                    \n                    InsuranceType\n                \n            \n            \n                \n                        \"Health\" | \"Family\" | \"Dental\"\n\n                \n            \n        \n    \n    src/professional/domain/models/professional.interface.ts\n    \n    \n        \n            \n                \n                    \n                    Professions\n                \n            \n            \n                \n                        \"Doctor\" | \"Nurse\" | \"Administrative\"\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            patientSchema   (src/.../patient.schema.ts)\n                        \n                        \n                            professionalSchema   (src/.../professional.schema.ts)\n                        \n                        \n                            userSchema   (src/.../user.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/patient/infrastructure/MongoDB/patient.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            patientSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    name: String,\n    firstSurname: String,\n    secondSurname: String,\n    gender: String,\n    birthDate: Date,\n    nif: String,\n    address: {\n        street: String,\n        streetNumber: String,\n        doorNumber: String,\n        postalCode: String,\n        city: String,\n    },\n    userType: String,\n    nhc: String,\n    insurances: Array\n})\n                        \n                    \n\n\n            \n        \n\n    src/professional/infrastructure/MongoDB/professional.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            professionalSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    name: String,\n    firstSurname: String,\n    secondSurname: String,\n    gender: String,\n    birthDate: Date,\n    nif: String,\n    address: {\n        street: String,\n        streetNumber: String,\n        doorNumber: String,\n        postalCode: String,\n        city: String,\n    },\n    userType: String,\n    medicalBoardNumber: String,\n    professionalType: String\n})\n                        \n                    \n\n\n            \n        \n\n    src/users/infrastructure/MongoDB/user.schema.ts\n    \n            \n            \n                \n                    \n                        \n                        \n                            \n                            userSchema\n                            \n                        \n                    \n                \n                    \n                        \n                            Default value : new mongoose.Schema({\n    email: {\n        type: String,\n        unique: true,\n        required: true\n    },\n    password: String,\n})\n                        \n                    \n\n\n            \n        \n\n\n\n\n                   \n    \n         result-matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
